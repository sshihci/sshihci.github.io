{"version":3,"file":"component---src-pages-index-tsx-d0c8b4b7add20113ab70.js","mappings":"0HAAA,SAASA,EAAMC,GACb,IAAIC,EACAC,EACAC,EAAM,GAEV,GAAmB,iBAARH,GAAmC,iBAARA,EACpCG,GAAOH,OACF,GAAmB,iBAARA,EAChB,GAAII,MAAMC,QAAQL,GAChB,IAAKC,EAAI,EAAGA,EAAID,EAAIM,OAAQL,IACtBD,EAAIC,KACFC,EAAIH,EAAMC,EAAIC,OAChBE,IAAQA,GAAO,KACfA,GAAOD,QAKb,IAAKD,KAAKD,EACJA,EAAIC,KACNE,IAAQA,GAAO,KACfA,GAAOF,GAMf,OAAOE,EAGM,SAAS,IAMtB,IALA,IACII,EACAC,EAFAC,EAAI,EAGJN,EAAM,GAEHM,EAAIC,UAAUJ,SACfC,EAAMG,UAAUD,QACdD,EAAIT,EAAMQ,MACZJ,IAAQA,GAAO,KACfA,GAAOK,GAKb,OAAOL,E,0DC3CHQ,EAEE,gBAFFA,EAGC,iCAGDC,EAAQ,CACZ,CACEC,YACE,kIACFC,KAAM,WACNC,IAAK,2CAEP,CACEF,YACE,2HACFC,KAAM,gBACNC,IAAK,yCAEP,CACEF,YACE,+HACFC,KAAM,mBACNC,IAAK,4CAEP,CACEF,YACE,0HACFC,KAAM,oBACNC,IAAK,6CAEP,CACEF,YACE,8HACFC,KAAM,iBACNC,IAAK,oCAEP,CACEC,OAAO,EACPH,YACE,+HACFC,KAAM,iBACNC,IAAK,mCAmFT,EA/EkB,WAChB,OACE,kBAAME,UAAU,+BAAhB,WACE,0CAEA,gBAAIA,UAAU,iBAAd,WACE,+CAEA,mBAEA,iBAAMA,UAAU,kBAAhB,8CAEA,iBAAM,aAAW,sBAAsBC,KAAK,MAA5C,wBAKF,eAAGD,UAAU,QAAb,WACE,oCAEA,iBAAMA,UAAU,uDAAhB,iCAIA,qEAEA,iBAAM,aAAW,0BAA0BC,KAAK,MAAhD,oBAKF,gBAAID,UAAU,QAAd,WACE,eAAIA,UAAU,qCAAd,UACE,cACEA,UAAU,gDACVE,KAASR,EAAL,yEAFN,SAIGA,MAIJC,EAAMQ,KAAI,SAACC,GAAD,OACT,eACEJ,UAAWK,EAAK,qCADlB,UAIE,6BACE,cACEL,UAAU,gDACVE,KAASE,EAAKN,IAAV,yEAFN,SAIGM,EAAKP,OAGPO,EAAKL,QACJ,iBACE,aAAW,YACXC,UAAU,wJAFZ,mBAQF,cAAGA,UAAU,6CAAb,SACGI,EAAKR,kBApBLQ,EAAKN,YA2BhB,gBACEQ,IAAI,gBACJC,IAAI","sources":["webpack://sshihci.github.io/./node_modules/clsx/dist/clsx.m.js","webpack://sshihci.github.io/./src/pages/index.tsx"],"sourcesContent":["function toVal(mix) {\n  var k,\n      y,\n      str = '';\n\n  if (typeof mix === 'string' || typeof mix === 'number') {\n    str += mix;\n  } else if (typeof mix === 'object') {\n    if (Array.isArray(mix)) {\n      for (k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n          if (y = toVal(mix[k])) {\n            str && (str += ' ');\n            str += y;\n          }\n        }\n      }\n    } else {\n      for (k in mix) {\n        if (mix[k]) {\n          str && (str += ' ');\n          str += k;\n        }\n      }\n    }\n  }\n\n  return str;\n}\n\nexport default function () {\n  var i = 0,\n      tmp,\n      x,\n      str = '';\n\n  while (i < arguments.length) {\n    if (tmp = arguments[i++]) {\n      if (x = toVal(tmp)) {\n        str && (str += ' ');\n        str += x;\n      }\n    }\n  }\n\n  return str;\n}","import clsx from 'clsx'\n\nconst docLink = {\n  color: '#8954A8',\n  text: 'Documentation',\n  url: 'https://www.gatsbyjs.com/docs/',\n}\n\nconst links = [\n  {\n    description:\n      \"A great place to get started if you're new to web development. Designed to guide you through setting up your first Gatsby site.\",\n    text: 'Tutorial',\n    url: 'https://www.gatsbyjs.com/docs/tutorial/',\n  },\n  {\n    description:\n      \"Practical step-by-step guides to help you achieve a specific goal. Most useful when you're trying to get something done.\",\n    text: 'How to Guides',\n    url: 'https://www.gatsbyjs.com/docs/how-to/',\n  },\n  {\n    description:\n      \"Nitty-gritty technical descriptions of how Gatsby works. Most useful when you need detailed information about Gatsby's APIs.\",\n    text: 'Reference Guides',\n    url: 'https://www.gatsbyjs.com/docs/reference/',\n  },\n  {\n    description:\n      'Big-picture explanations of higher-level Gatsby concepts. Most useful for building understanding of a particular topic.',\n    text: 'Conceptual Guides',\n    url: 'https://www.gatsbyjs.com/docs/conceptual/',\n  },\n  {\n    description:\n      'Add functionality and customize your Gatsby site or app with thousands of plugins built by our amazing developer community.',\n    text: 'Plugin Library',\n    url: 'https://www.gatsbyjs.com/plugins',\n  },\n  {\n    badge: true,\n    description:\n      'Now youâ€™re ready to show the world! Give your Gatsby site superpowers: Build and host on Gatsby Cloud. Get started for free!',\n    text: 'Build and Host',\n    url: 'https://www.gatsbyjs.com/cloud',\n  },\n]\n\nconst IndexPage = (): JSX.Element => {\n  return (\n    <main className=\"p-24 font-sans text-gray-800\">\n      <title>Home Page</title>\n\n      <h1 className=\"mb-16 max-w-xs\">\n        <span>Congratulations</span>\n\n        <br />\n\n        <span className=\"text-purple-600\">â€” you just made a Gatsby site! </span>\n\n        <span aria-label=\"Party popper emojis\" role=\"img\">\n          ðŸŽ‰ðŸŽ‰ðŸŽ‰\n        </span>\n      </h1>\n\n      <p className=\"mb-12\">\n        <span>Edit</span>\n\n        <code className=\"p-1 text-xl text-yellow-600 bg-yellow-100 rounded-md\">\n          src/pages/index.js\n        </code>\n\n        <span>to see this page update in real-time.</span>\n\n        <span aria-label=\"Sunglasses smiley emoji\" role=\"img\">\n          ðŸ˜Ž\n        </span>\n      </p>\n\n      <ul className=\"mb-24\">\n        <li className=\"mb-6 text-base font-bold align-top\">\n          <a\n            className=\"text-base font-bold text-purple-700 align-top\"\n            href={`${docLink.url}?utm_source=starter&utm_medium=start-page&utm_campaign=minimal-starter`}\n          >\n            {docLink.text}\n          </a>\n        </li>\n\n        {links.map((link) => (\n          <li\n            className={clsx('mb-8 max-w-xl text-2xl font-light')}\n            key={link.url}\n          >\n            <span>\n              <a\n                className=\"text-base font-bold text-purple-700 align-top\"\n                href={`${link.url}?utm_source=starter&utm_medium=start-page&utm_campaign=minimal-starter`}\n              >\n                {link.text}\n              </a>\n\n              {link.badge && (\n                <span\n                  aria-label=\"New Badge\"\n                  className=\"inline-block relative -top-0.5 py-0.5 px-1.5 ml-2.5 text-xs font-bold tracking-wider leading-none text-white bg-green-700 rounded-md border-green-700\"\n                >\n                  NEW!\n                </span>\n              )}\n\n              <p className=\"mt-2.5 text-sm leading-tight text-gray-800\">\n                {link.description}\n              </p>\n            </span>\n          </li>\n        ))}\n      </ul>\n\n      <img\n        alt=\"Gatsby G Logo\"\n        src=\"data:image/svg+xml,%3Csvg width='24' height='24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M12 2a10 10 0 110 20 10 10 0 010-20zm0 2c-3.73 0-6.86 2.55-7.75 6L14 19.75c3.45-.89 6-4.02 6-7.75h-5.25v1.5h3.45a6.37 6.37 0 01-3.89 4.44L6.06 9.69C7 7.31 9.3 5.63 12 5.63c2.13 0 4 1.04 5.18 2.65l1.23-1.06A7.959 7.959 0 0012 4zm-8 8a8 8 0 008 8c.04 0 .09 0-8-8z' fill='%23639'/%3E%3C/svg%3E\"\n      />\n    </main>\n  )\n}\n\nexport default IndexPage\n"],"names":["toVal","mix","k","y","str","Array","isArray","length","tmp","x","i","arguments","docLink","links","description","text","url","badge","className","role","href","map","link","clsx","alt","src"],"sourceRoot":""}