{"version":3,"file":"5cb69b3cbfffa19b1eae7e7c78934a7c86e4d66e-09ef4d461db13d4a3647.js","mappings":"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","sources":["webpack://sshihci.github.io/./src/components/Common/atoms/Button.tsx","webpack://sshihci.github.io/./src/components/Common/atoms/Link.tsx","webpack://sshihci.github.io/./src/components/Common/atoms/LinkStyle.ts","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/utils/use-animation-frame.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/value/use-motion-value.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/value/use-time.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/utils/transform.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/value/use-combine-values.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/value/use-on-change.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/value/use-transform.mjs","webpack://sshihci.github.io/./src/components/Common/atoms/Hexagon.tsx","webpack://sshihci.github.io/./src/hooks/useRelativePosition.ts","webpack://sshihci.github.io/./src/components/Common/molecules/HexagonMap.tsx","webpack://sshihci.github.io/./src/components/Common/organisms/File.tsx","webpack://sshihci.github.io/./src/components/ContactForm/ContactForm.tsx","webpack://sshihci.github.io/./src/components/ContactForm/ContactFormField/ContactFormField.tsx","webpack://sshihci.github.io/./src/components/ContactForm/ContactFormField/ContactFormFieldInput.tsx","webpack://sshihci.github.io/./src/components/ContactForm/ContactFormField/ContactFormFieldLabel.tsx","webpack://sshihci.github.io/./src/components/ContactForm/ContactFormField/ContactFormFieldTextarea.tsx","webpack://sshihci.github.io/./src/components/ContactForm/ContactFormField/index.ts","webpack://sshihci.github.io/./src/components/ContactForm/index.ts","webpack://sshihci.github.io/./src/components/ContactForm/ContactFormButton.tsx","webpack://sshihci.github.io/./src/components/DataSection/DataSectionBlock.tsx","webpack://sshihci.github.io/./src/hooks/useIsSameSite.ts","webpack://sshihci.github.io/./src/lib/is-not-nullable.ts","webpack://sshihci.github.io/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js"],"sourcesContent":["import clsx from 'clsx'\nimport { forwardRef } from 'react'\nimport { LinkStyle } from './LinkStyle'\n\nexport type ButtonProps = JSX.IntrinsicElements['button'] & {\n  isActive?: boolean\n}\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      isActive,\n\n      ...props\n    },\n    ref,\n  ) => {\n    return (\n      <button\n        className={clsx(\n          '',\n          LinkStyle,\n          isActive &&\n            `after:absolute after:right-4 after:leading-6 rounded-2xl before:!right-0 after:content-arrow-right-icon`,\n          className,\n        )}\n        ref={ref}\n        type=\"button\"\n        {...props}\n      />\n    )\n  },\n)\n","import clsx from 'clsx'\nimport { GatsbyLinkProps, Link as GatsbyLink } from 'gatsby'\nimport { useIsSameSite } from '~/hooks/useIsSameSite'\nimport { LinkStyle } from './LinkStyle'\n\nexport const Link = ({\n  className,\n  to,\n  ...props\n}: Omit<GatsbyLinkProps<Record<string, unknown>>, 'ref'>): JSX.Element => {\n  const isSameSite = useIsSameSite(to)\n\n  if (isSameSite) {\n    return (\n      <GatsbyLink\n        className={clsx('', LinkStyle, className)}\n        to={to}\n        {...props}\n      />\n    )\n  }\n  return (\n    <a\n      className={clsx('', LinkStyle, className)}\n      href={to}\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n      {...props}\n    />\n  )\n}\n","import clsx from 'clsx'\n\nexport const LinkStyle = clsx(\n  'overflow-hidden relative py-1.5 px-6 text-sm text-center bg-gray-50 border min-w-[13rem] border-cyan-600 text-cyan-600',\n  'before:absolute before:w-full before:h-full before:bg-opacity-30 before:duration-200 before:bg-cyan-200',\n  'before:top-0 before:right-full hover:before:right-0',\n  'hover:rounded-2xl duration-500',\n)\n","import sync, { cancelSync } from 'framesync';\nimport { useEffect } from 'react';\nimport { useConstant } from './use-constant.mjs';\nvar getCurrentTime = typeof performance !== \"undefined\" ? function () {\n  return performance.now();\n} : function () {\n  return Date.now();\n};\n\nfunction useAnimationFrame(callback) {\n  var initialTimestamp = useConstant(getCurrentTime);\n  useEffect(function () {\n    var provideTimeSinceStart = function provideTimeSinceStart(_a) {\n      var timestamp = _a.timestamp;\n      callback(timestamp - initialTimestamp);\n    };\n\n    sync.update(provideTimeSinceStart, true);\n    return function () {\n      return cancelSync.update(provideTimeSinceStart);\n    };\n  }, [callback]);\n}\n\nexport { useAnimationFrame };","import { __read } from 'tslib';\nimport { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\n\nfunction useMotionValue(initial) {\n  var value = useConstant(function () {\n    return motionValue(initial);\n  });\n  /**\n   * If this motion value is being used in static mode, like on\n   * the Framer canvas, force components to rerender when the motion\n   * value is updated.\n   */\n\n  var isStatic = useContext(MotionConfigContext).isStatic;\n\n  if (isStatic) {\n    var _a = __read(useState(initial), 2),\n        setLatest_1 = _a[1];\n\n    useEffect(function () {\n      return value.onChange(setLatest_1);\n    }, []);\n  }\n\n  return value;\n}\n\nexport { useMotionValue };","import { useAnimationFrame } from '../utils/use-animation-frame.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\n\nfunction useTime() {\n  var time = useMotionValue(0);\n  useAnimationFrame(function (t) {\n    return time.set(t);\n  });\n  return time;\n}\n\nexport { useTime };","import { __assign } from 'tslib';\nimport { interpolate } from 'popmotion';\n\nvar isCustomValueType = function isCustomValueType(v) {\n  return typeof v === \"object\" && v.mix;\n};\n\nvar getMixer = function getMixer(v) {\n  return isCustomValueType(v) ? v.mix : undefined;\n};\n\nfunction transform() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var useImmediate = !Array.isArray(args[0]);\n  var argOffset = useImmediate ? 0 : -1;\n  var inputValue = args[0 + argOffset];\n  var inputRange = args[1 + argOffset];\n  var outputRange = args[2 + argOffset];\n  var options = args[3 + argOffset];\n  var interpolator = interpolate(inputRange, outputRange, __assign({\n    mixer: getMixer(outputRange[0])\n  }, options));\n  return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };","import { useMotionValue } from './use-motion-value.mjs';\nimport { useMultiOnChange } from './use-on-change.mjs';\nimport sync from 'framesync';\n\nfunction useCombineMotionValues(values, combineValues) {\n  /**\n   * Initialise the returned motion value. This remains the same between renders.\n   */\n  var value = useMotionValue(combineValues());\n  /**\n   * Create a function that will update the template motion value with the latest values.\n   * This is pre-bound so whenever a motion value updates it can schedule its\n   * execution in Framesync. If it's already been scheduled it won't be fired twice\n   * in a single frame.\n   */\n\n  var updateValue = function updateValue() {\n    return value.set(combineValues());\n  };\n  /**\n   * Synchronously update the motion value with the latest values during the render.\n   * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n   */\n\n\n  updateValue();\n  /**\n   * Subscribe to all motion values found within the template. Whenever any of them change,\n   * schedule an update.\n   */\n\n  useMultiOnChange(values, function () {\n    return sync.update(updateValue, false, true);\n  });\n  return value;\n}\n\nexport { useCombineMotionValues };","import { useEffect } from 'react';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\n\nfunction useOnChange(value, callback) {\n  useEffect(function () {\n    if (isMotionValue(value)) return value.onChange(callback);\n  }, [callback]);\n}\n\nfunction useMultiOnChange(values, handler) {\n  useEffect(function () {\n    var subscriptions = values.map(function (value) {\n      return value.onChange(handler);\n    });\n    return function () {\n      return subscriptions.forEach(function (unsubscribe) {\n        return unsubscribe();\n      });\n    };\n  });\n}\n\nexport { useMultiOnChange, useOnChange };","import { __read } from 'tslib';\nimport { transform } from '../utils/transform.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n  var transformer = typeof inputRangeOrTransformer === \"function\" ? inputRangeOrTransformer : transform(inputRangeOrTransformer, outputRange, options);\n  return Array.isArray(input) ? useListTransform(input, transformer) : useListTransform([input], function (_a) {\n    var _b = __read(_a, 1),\n        latest = _b[0];\n\n    return transformer(latest);\n  });\n}\n\nfunction useListTransform(values, transformer) {\n  var latest = useConstant(function () {\n    return [];\n  });\n  return useCombineMotionValues(values, function () {\n    latest.length = 0;\n    var numValues = values.length;\n\n    for (var i = 0; i < numValues; i++) {\n      latest[i] = values[i].get();\n    }\n\n    return transformer(latest);\n  });\n}\n\nexport { useTransform };","import { m, MotionValue, useMotionValue, useTransform } from 'framer-motion'\nimport { RefObject, useEffect, useRef } from 'react'\nimport { useRelativePosition } from '~/hooks/useRelativePosition'\n\ntype HexagonProps = {\n  size: string\n  parentRef: RefObject<Element>\n  state: MotionValue<number>\n}\n\nexport const Hexagon = ({\n  size,\n  parentRef,\n  state,\n}: HexagonProps): JSX.Element => {\n  const ref = useRef(null)\n  const relative = useRelativePosition(parentRef, ref)\n\n  const delay = useMotionValue(0)\n\n  useEffect(() => {\n    if (relative?.ratio) {\n      delay.set(relative.ratio)\n    }\n  }, [delay, relative?.ratio])\n\n  const num = useTransform<number, number>(\n    [state, delay],\n    ([prevState, prevDelay]) => ((prevState ?? 0) + (prevDelay ?? 0)) % 1,\n  )\n\n  const color = useTransform(\n    num,\n    [0, 0.5, 1],\n    ['#93DAE3', '#42C2D3', '#93DAE3'],\n  )\n\n  return (\n    <svg\n      className=\"drop-shadow-hexagon\"\n      height={size}\n      ref={ref}\n      viewBox=\"-150 -150 300 300\"\n      width={size}\n    >\n      <m.path\n        d=\"M130 75 L0 150 L-130 75 L-130 -75 L-0 -150 L130 -75 z\"\n        fill={color}\n      />\n    </svg>\n  )\n}\n","import { RefObject, useMemo } from 'react'\nimport { usePosition } from './usePosition'\n\nexport type RelativePosition = {\n  ratio: number\n}\n\nexport const useRelativePosition = <T extends Element, V extends Element>(\n  parentRef: RefObject<T>,\n  ref: RefObject<V>,\n): RelativePosition | null => {\n  const parentPosition = usePosition(parentRef)\n  const position = usePosition(ref)\n\n  const relativePosition = useMemo<RelativePosition | null>(() => {\n    if (!parentPosition || !position) {\n      return null\n    }\n\n    // (x1, y1)is corner of parent, (x2, y2) is center of child\n    const x1 = parentPosition.width\n    const y1 = parentPosition.height\n    const x2 = position.left - parentPosition.left + position.width / 2\n    const y2 = -(position.top - parentPosition.top) + position.height / 2\n\n    const r1_2 = x1 ** 2 + y1 ** 2\n\n    const ratio = (x1 * x2 + y1 * y2) / r1_2\n\n    return {\n      ratio,\n    }\n  }, [parentPosition, position])\n\n  return relativePosition\n}\n","import clsx from 'clsx'\nimport { useTime, useTransform } from 'framer-motion'\nimport { useRef } from 'react'\nimport { Hexagon } from '../atoms/Hexagon'\n\ntype HexagonMapProps = {\n  className?: string\n  duration?: number\n}\n\nexport const HexagonMap = ({\n  className,\n  duration = 1000,\n}: HexagonMapProps): JSX.Element => {\n  const ref = useRef(null)\n  const time = useTime()\n  const state = useTransform(time, (prev) => (prev % duration) / duration)\n\n  return (\n    <div\n      className={clsx('inline-flex flex-col gap-3 animate-pulse', className)}\n      ref={ref}\n    >\n      <div className=\"flex flex-row gap-6\">\n        {/* {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15].map((i) => (\n          <Hexagon state={state} delay={i * DELAY} key={i} parentRef={ref} size=\"15\" />\n        ))} */}\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n      </div>\n\n      <div className=\"flex flex-row gap-6\">\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n      </div>\n\n      <div className=\"flex flex-row gap-6\">\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n      </div>\n    </div>\n  )\n}\n","import clsx from 'clsx'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { useMemo } from 'react'\nimport { IconType } from 'react-icons'\nimport {\n  AiOutlineFile,\n  AiOutlineFileExcel,\n  AiOutlineFilePdf,\n} from 'react-icons/ai'\nimport { FileQuery } from '~graphql-types'\n\nconst fileIcon: Record<string, IconType> = {\n  pdf: AiOutlineFilePdf,\n  xlsx: AiOutlineFileExcel,\n  xlx: AiOutlineFileExcel,\n}\n\nexport type FileProps = {\n  name: string\n  display?: string\n  className?: string\n}\n\nexport const File = ({ name, className, display }: FileProps): JSX.Element => {\n  const { allFile } = useStaticQuery<FileQuery>(graphql`\n    query File {\n      allFile(filter: { sourceInstanceName: { eq: \"data\" } }) {\n        nodes {\n          id\n          extension\n          name\n          base\n          publicURL\n          relativePath\n        }\n      }\n    }\n  `)\n\n  const file = useMemo(() => {\n    return allFile.nodes.find(\n      (node) =>\n        node.relativePath === name || node.name === name || node.base === name,\n    )\n  }, [allFile.nodes, name])\n\n  const Icon = useMemo(() => {\n    if (!file) return AiOutlineFile\n    return fileIcon[file.extension] ?? AiOutlineFile\n  }, [file])\n\n  if (!file) {\n    return <div>ファイルが見つかりません</div>\n  }\n\n  return (\n    <div>\n      <a\n        className={clsx(\n          'flex flex-row flex-nowrap gap-2 items-center py-2 px-4',\n          'hover:underline hover:underline-offset-2',\n          className,\n        )}\n        download\n        href={file.publicURL}\n      >\n        <Icon\n          className={clsx(\n            'flex-shrink-0',\n            file.extension === 'pdf'\n              ? 'text-rose-500 border-rose-500'\n              : file.extension === 'xlsx' || file.extension === 'xlx'\n              ? 'text-emerald-500 border-emerald-500'\n              : 'border-gray-600',\n          )}\n          size={24}\n        />\n\n        <span className=\"text-lg\">{display ?? file.base}</span>\n      </a>\n    </div>\n  )\n}\n","import clsx from 'clsx'\nimport { FormEventHandler, forwardRef, useCallback } from 'react'\nimport { useToasts } from 'react-toast-notifications'\n\nexport const ContactForm = forwardRef<\n  HTMLFormElement,\n  JSX.IntrinsicElements['form']\n>(({ className, children, ...props }, ref) => {\n  const { addToast } = useToasts()\n\n  const onSubmit = useCallback<FormEventHandler<HTMLFormElement>>(\n    (e) => {\n      setTimeout(() => {\n        if (e.target instanceof HTMLFormElement) {\n          e.target.reset()\n        }\n        addToast('お問い合わせありがとうございます。', { autoDismiss: true })\n      })\n    },\n    [addToast],\n  )\n\n  return (\n    <form\n      className={clsx('', className)}\n      method=\"POST\"\n      onSubmit={onSubmit}\n      ref={ref}\n      target=\"contact-form-iframe\"\n      {...props}\n    >\n      {children}\n\n      <iframe className=\"hidden\" name=\"contact-form-iframe\" />\n    </form>\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const ContactFormField = forwardRef<\n  HTMLFieldSetElement,\n  JSX.IntrinsicElements['fieldset']\n>(({ className, ...props }, ref) => {\n  return (\n    <fieldset\n      className={clsx('flex flex-col gap-1', 'sm:flex-row sm:gap-4', className)}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const ContactFormFieldInput = forwardRef<\n  HTMLInputElement,\n  JSX.IntrinsicElements['input']\n>(({ className, ...props }, ref) => {\n  return (\n    <input\n      className={clsx(\n        'block flex-1 text-lg placeholder:text-gray-400 bg-gray-200 rounded-t-xl border-0 border-b-2 border-transparent',\n        'focus:ring-0 focus:outline-none focus:border-cyan-500',\n        'focus:shadow-lg focus:shadow-cyan-50',\n        className,\n      )}\n      ref={ref}\n      type=\"text\"\n      {...props}\n    />\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const ContactFormFieldLabel = forwardRef<\n  HTMLParagraphElement,\n  JSX.IntrinsicElements['p']\n>(({ className, children, ...props }, ref) => {\n  return (\n    <p\n      className={clsx(\n        'flex flex-row justify-start items-center text-lg text-right min-w-[8rem]',\n        'sm:justify-end sm:text-base',\n        'lg:min-w-[4rem]',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    >\n      <legend>{children}</legend>\n    </p>\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const ContactFormFieldTextarea = forwardRef<\n  HTMLTextAreaElement,\n  JSX.IntrinsicElements['textarea']\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={clsx(\n        'block flex-1 text-lg placeholder:text-gray-400 bg-gray-200 rounded-t-xl border-0',\n        'focus:border-b-2 focus:ring-0 focus:outline-none focus:border-cyan-500',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import { ContactFormField as RootContactFormField } from './ContactFormField'\nimport { ContactFormFieldInput } from './ContactFormFieldInput'\nimport { ContactFormFieldLabel } from './ContactFormFieldLabel'\nimport { ContactFormFieldTextarea } from './ContactFormFieldTextarea'\n\ntype ContactFormField = typeof RootContactFormField & {\n  Label: typeof ContactFormFieldLabel\n  Input: typeof ContactFormFieldInput\n  Textarea: typeof ContactFormFieldTextarea\n}\n\nconst ContactFormField = RootContactFormField as ContactFormField\nContactFormField.Label = ContactFormFieldLabel\nContactFormField.Input = ContactFormFieldInput\nContactFormField.Textarea = ContactFormFieldTextarea\n\nexport default ContactFormField\n","import { ContactForm as RootContactForm } from './ContactForm'\nimport { ContactFormButton } from './ContactFormButton'\nimport ContactFormField from './ContactFormField'\n\ntype ContactForm = typeof RootContactForm & {\n  Field: typeof ContactFormField\n  Button: typeof ContactFormButton\n}\n\nconst ContactForm = RootContactForm as ContactForm\nContactForm.Field = ContactFormField\nContactForm.Button = ContactFormButton\n\nexport default ContactForm\n","import clsx from 'clsx'\nimport { Button } from '../Common/atoms/Button'\n\nexport const ContactFormButton = ({\n  className,\n  ...props\n}: Omit<JSX.IntrinsicElements['button'], 'ref'>): JSX.Element => {\n  return <Button className={clsx('', className)} type=\"submit\" {...props} />\n}\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\nimport { DataSectionBlockFileFragment } from '~graphql-types'\nimport { File } from '../Common/organisms/File'\n\nconst graphql = String.raw\n\nexport const DataSectionBlockFragment = graphql`\n  fragment DataSectionBlockFile on ConfigYamlFiles {\n    name\n    date\n    pdf {\n      relativePath\n    }\n    excel {\n      relativePath\n    }\n  }\n`\n\ntype DataSectionBlockProps = JSX.IntrinsicElements['div'] & {\n  file: DataSectionBlockFileFragment\n}\n\nexport const DataSectionBlock = forwardRef<\n  HTMLDivElement,\n  DataSectionBlockProps\n>(({ className, file, ...props }, ref) => {\n  if (!file.name || !file.excel?.relativePath || !file.pdf?.relativePath) {\n    return null\n  }\n  return (\n    <div\n      className={clsx('flex flex-col gap-3', className)}\n      {...props}\n      ref={ref}\n    >\n      <p>{file.date}</p>\n\n      <p className=\"text-lg\">{file.name}</p>\n\n      <ul className=\"flex flex-col gap-3 p-4 bg-opacity-20 bg-cyan-200\">\n        <li>\n          <File display=\"データソースと公開URL\" name={file.pdf.relativePath} />\n        </li>\n\n        <li>\n          <File display=\"データ一覧\" name={file.excel.relativePath} />\n        </li>\n      </ul>\n    </div>\n  )\n})\n","import { useLocation } from '@reach/router'\nimport { useMemo } from 'react'\nexport const useIsSameSite = (url: string): boolean => {\n  const location = useLocation()\n  const isSameSite = useMemo(() => {\n    if (url.startsWith('/') || url.startsWith('#') || url.startsWith('.'))\n      return true\n    try {\n      const toUrl = new URL(url)\n      const locationUrl = new URL(location.href)\n      return toUrl.origin === locationUrl.origin\n    } catch {\n      return false\n    }\n  }, [location.href, url])\n\n  return isSameSite\n}\n","export const isNotNullable = <T>(value: T): value is NonNullable<T> => {\n  return value !== null && typeof value !== 'undefined'\n}\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}"],"names":["Button","forwardRef","ref","className","isActive","props","clsx","LinkStyle","type","Link","to","useIsSameSite","href","rel","target","getCurrentTime","performance","now","Date","useMotionValue","initial","value","useContext","MotionConfigContext","isStatic","setLatest_1","useState","useEffect","onChange","useTime","callback","initialTimestamp","time","t","set","provideTimeSinceStart","_a","timestamp","getMixer","v","mix","isCustomValueType","undefined","useCombineMotionValues","values","combineValues","updateValue","handler","subscriptions","map","forEach","unsubscribe","useMultiOnChange","useTransform","input","inputRangeOrTransformer","outputRange","options","transformer","args","_i","arguments","length","useImmediate","Array","isArray","argOffset","inputValue","inputRange","interpolator","interpolate","mixer","transform","useListTransform","latest","numValues","i","get","Hexagon","size","parentRef","state","useRef","relative","parentPosition","usePosition","position","useMemo","x1","width","y1","height","ratio","left","top","useRelativePosition","delay","num","prevState","prevDelay","color","viewBox","m","d","fill","HexagonMap","duration","prev","fileIcon","pdf","AiOutlineFilePdf","xlsx","AiOutlineFileExcel","xlx","File","name","display","allFile","useStaticQuery","file","nodes","find","node","relativePath","base","Icon","extension","AiOutlineFile","download","publicURL","ContactForm","children","addToast","useToasts","onSubmit","useCallback","e","setTimeout","HTMLFormElement","reset","autoDismiss","method","ContactFormField","ContactFormFieldInput","ContactFormFieldLabel","ContactFormFieldTextarea","RootContactFormField","Label","Input","Textarea","RootContactForm","Field","DataSectionBlock","graphql","String","raw","excel","date","url","location","useLocation","startsWith","toUrl","URL","locationUrl","origin","isNotNullable","_taggedTemplateLiteralLoose","strings","slice"],"sourceRoot":""}