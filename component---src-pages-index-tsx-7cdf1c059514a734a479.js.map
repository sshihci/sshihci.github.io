{"version":3,"file":"component---src-pages-index-tsx-7cdf1c059514a734a479.js","mappings":"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","sources":["webpack://sshihci.github.io/./src/components/Common/atoms/LinkStyle.ts","webpack://sshihci.github.io/./src/components/Common/atoms/Link.tsx","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/utils/use-animation-frame.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/value/use-motion-value.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/value/use-time.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/utils/transform.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/value/use-combine-values.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/value/use-on-change.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/value/use-transform.mjs","webpack://sshihci.github.io/./src/components/Common/atoms/Hexagon.tsx","webpack://sshihci.github.io/./src/hooks/useRelativePosition.ts","webpack://sshihci.github.io/./src/components/Common/molecules/HexagonMap.tsx","webpack://sshihci.github.io/./src/components/Common/organisms/File.tsx","webpack://sshihci.github.io/./src/components/ContactForm/ContactForm.tsx","webpack://sshihci.github.io/./src/components/ContactForm/ContactFormField/ContactFormField.tsx","webpack://sshihci.github.io/./src/components/ContactForm/ContactFormField/ContactFormFieldInput.tsx","webpack://sshihci.github.io/./src/components/ContactForm/ContactFormField/ContactFormFieldLabel.tsx","webpack://sshihci.github.io/./src/components/ContactForm/ContactFormField/ContactFormFieldTextarea.tsx","webpack://sshihci.github.io/./src/components/ContactForm/ContactFormField/index.ts","webpack://sshihci.github.io/./src/components/ContactForm/index.ts","webpack://sshihci.github.io/./src/components/Common/atoms/Button.tsx","webpack://sshihci.github.io/./src/components/ContactForm/ContactFormButton.tsx","webpack://sshihci.github.io/./src/components/Hero/Hero.tsx","webpack://sshihci.github.io/./src/components/Hero/HeroBadge/HeroBadge.tsx","webpack://sshihci.github.io/./src/components/Hero/HeroBadge/HeroBadgeText.tsx","webpack://sshihci.github.io/./src/components/Hero/HeroBadge/index.ts","webpack://sshihci.github.io/./src/components/Hero/HeroText.tsx","webpack://sshihci.github.io/./src/components/Hero/index.ts","webpack://sshihci.github.io/./src/components/Hero/HeroImage.tsx","webpack://sshihci.github.io/./src/components/Introduction/Introduction.tsx","webpack://sshihci.github.io/./src/components/Introduction/IntroductionDescription.tsx","webpack://sshihci.github.io/./src/components/Introduction/IntroductionName/IntroductionName.tsx","webpack://sshihci.github.io/./src/components/Introduction/IntroductionName/IntroductionNameEnglish.tsx","webpack://sshihci.github.io/./src/components/Introduction/IntroductionName/IntroductionNameJapanese.tsx","webpack://sshihci.github.io/./src/components/Introduction/IntroductionName/index.ts","webpack://sshihci.github.io/./src/components/Introduction/IntroductionProfile.tsx","webpack://sshihci.github.io/./src/components/Introduction/MainSubject/MainSubject.tsx","webpack://sshihci.github.io/./src/components/Common/atoms/Square.tsx","webpack://sshihci.github.io/./src/components/Introduction/MainSubject/MainSubjectLabel.tsx","webpack://sshihci.github.io/./src/components/Introduction/MainSubject/MainSubjectName.tsx","webpack://sshihci.github.io/./src/components/Introduction/MainSubject/index.ts","webpack://sshihci.github.io/./src/components/Introduction/index.ts","webpack://sshihci.github.io/./src/components/Introduction/IntroductionImage.tsx","webpack://sshihci.github.io/./src/components/NewsList/NewsList.tsx","webpack://sshihci.github.io/./src/components/NewsList/NewsListItem/NewsListItem.tsx","webpack://sshihci.github.io/./src/components/NewsList/NewsListItem/NewsListItemDate.tsx","webpack://sshihci.github.io/./src/components/NewsList/NewsListItem/NewsListItemTitle.tsx","webpack://sshihci.github.io/./src/components/NewsList/NewsListItem/index.ts","webpack://sshihci.github.io/./src/components/NewsList/index.ts","webpack://sshihci.github.io/./src/pages/index.tsx"],"sourcesContent":["import clsx from 'clsx'\n\nexport const LinkStyle = clsx(\n  'py-1.5 px-16 text-sm bg-gray-50 border border-cyan-600 text-cyan-600',\n  'hover:bg-cyan-100 hover:text-cyan-700',\n  'before:w-10 before:h-10 before:bg-blue-200',\n)\n","import { useLocation } from '@reach/router'\nimport clsx from 'clsx'\nimport { GatsbyLinkProps, Link as GatsbyLink } from 'gatsby'\nimport { useMemo } from 'react'\nimport { LinkStyle } from './LinkStyle'\n\nexport const Link = ({\n  className,\n  to,\n  ...props\n}: Omit<GatsbyLinkProps<Record<string, unknown>>, 'ref'>): JSX.Element => {\n  const location = useLocation()\n  const isSameSite = useMemo(() => {\n    if (to.startsWith('/')) return true\n    try {\n      const toUrl = new URL(to)\n      const locationUrl = new URL(location.href)\n      return toUrl.origin === locationUrl.origin\n    } catch {\n      return false\n    }\n  }, [location.href, to])\n\n  if (isSameSite) {\n    return (\n      <GatsbyLink\n        className={clsx('', LinkStyle, className)}\n        to={to}\n        {...props}\n      />\n    )\n  }\n  return (\n    <a\n      className={clsx('', LinkStyle, className)}\n      href={to}\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n      {...props}\n    />\n  )\n}\n","import sync, { cancelSync } from 'framesync';\nimport { useEffect } from 'react';\nimport { useConstant } from './use-constant.mjs';\nvar getCurrentTime = typeof performance !== \"undefined\" ? function () {\n  return performance.now();\n} : function () {\n  return Date.now();\n};\n\nfunction useAnimationFrame(callback) {\n  var initialTimestamp = useConstant(getCurrentTime);\n  useEffect(function () {\n    var provideTimeSinceStart = function provideTimeSinceStart(_a) {\n      var timestamp = _a.timestamp;\n      callback(timestamp - initialTimestamp);\n    };\n\n    sync.update(provideTimeSinceStart, true);\n    return function () {\n      return cancelSync.update(provideTimeSinceStart);\n    };\n  }, [callback]);\n}\n\nexport { useAnimationFrame };","import { __read } from 'tslib';\nimport { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\n\nfunction useMotionValue(initial) {\n  var value = useConstant(function () {\n    return motionValue(initial);\n  });\n  /**\n   * If this motion value is being used in static mode, like on\n   * the Framer canvas, force components to rerender when the motion\n   * value is updated.\n   */\n\n  var isStatic = useContext(MotionConfigContext).isStatic;\n\n  if (isStatic) {\n    var _a = __read(useState(initial), 2),\n        setLatest_1 = _a[1];\n\n    useEffect(function () {\n      return value.onChange(setLatest_1);\n    }, []);\n  }\n\n  return value;\n}\n\nexport { useMotionValue };","import { useAnimationFrame } from '../utils/use-animation-frame.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\n\nfunction useTime() {\n  var time = useMotionValue(0);\n  useAnimationFrame(function (t) {\n    return time.set(t);\n  });\n  return time;\n}\n\nexport { useTime };","import { __assign } from 'tslib';\nimport { interpolate } from 'popmotion';\n\nvar isCustomValueType = function isCustomValueType(v) {\n  return typeof v === \"object\" && v.mix;\n};\n\nvar getMixer = function getMixer(v) {\n  return isCustomValueType(v) ? v.mix : undefined;\n};\n\nfunction transform() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var useImmediate = !Array.isArray(args[0]);\n  var argOffset = useImmediate ? 0 : -1;\n  var inputValue = args[0 + argOffset];\n  var inputRange = args[1 + argOffset];\n  var outputRange = args[2 + argOffset];\n  var options = args[3 + argOffset];\n  var interpolator = interpolate(inputRange, outputRange, __assign({\n    mixer: getMixer(outputRange[0])\n  }, options));\n  return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };","import { useMotionValue } from './use-motion-value.mjs';\nimport { useMultiOnChange } from './use-on-change.mjs';\nimport sync from 'framesync';\n\nfunction useCombineMotionValues(values, combineValues) {\n  /**\n   * Initialise the returned motion value. This remains the same between renders.\n   */\n  var value = useMotionValue(combineValues());\n  /**\n   * Create a function that will update the template motion value with the latest values.\n   * This is pre-bound so whenever a motion value updates it can schedule its\n   * execution in Framesync. If it's already been scheduled it won't be fired twice\n   * in a single frame.\n   */\n\n  var updateValue = function updateValue() {\n    return value.set(combineValues());\n  };\n  /**\n   * Synchronously update the motion value with the latest values during the render.\n   * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n   */\n\n\n  updateValue();\n  /**\n   * Subscribe to all motion values found within the template. Whenever any of them change,\n   * schedule an update.\n   */\n\n  useMultiOnChange(values, function () {\n    return sync.update(updateValue, false, true);\n  });\n  return value;\n}\n\nexport { useCombineMotionValues };","import { useEffect } from 'react';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\n\nfunction useOnChange(value, callback) {\n  useEffect(function () {\n    if (isMotionValue(value)) return value.onChange(callback);\n  }, [callback]);\n}\n\nfunction useMultiOnChange(values, handler) {\n  useEffect(function () {\n    var subscriptions = values.map(function (value) {\n      return value.onChange(handler);\n    });\n    return function () {\n      return subscriptions.forEach(function (unsubscribe) {\n        return unsubscribe();\n      });\n    };\n  });\n}\n\nexport { useMultiOnChange, useOnChange };","import { __read } from 'tslib';\nimport { transform } from '../utils/transform.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n  var transformer = typeof inputRangeOrTransformer === \"function\" ? inputRangeOrTransformer : transform(inputRangeOrTransformer, outputRange, options);\n  return Array.isArray(input) ? useListTransform(input, transformer) : useListTransform([input], function (_a) {\n    var _b = __read(_a, 1),\n        latest = _b[0];\n\n    return transformer(latest);\n  });\n}\n\nfunction useListTransform(values, transformer) {\n  var latest = useConstant(function () {\n    return [];\n  });\n  return useCombineMotionValues(values, function () {\n    latest.length = 0;\n    var numValues = values.length;\n\n    for (var i = 0; i < numValues; i++) {\n      latest[i] = values[i].get();\n    }\n\n    return transformer(latest);\n  });\n}\n\nexport { useTransform };","import { m, MotionValue, useMotionValue, useTransform } from 'framer-motion'\nimport { RefObject, useEffect, useRef } from 'react'\nimport { useRelativePosition } from '~/hooks/useRelativePosition'\n\ntype HexagonProps = {\n  size: string\n  parentRef: RefObject<Element>\n  state: MotionValue<number>\n}\n\nexport const Hexagon = ({\n  size,\n  parentRef,\n  state,\n}: HexagonProps): JSX.Element => {\n  const ref = useRef(null)\n  const relative = useRelativePosition(parentRef, ref)\n\n  const delay = useMotionValue(0)\n\n  useEffect(() => {\n    if (relative?.ratio) {\n      delay.set(relative.ratio)\n    }\n  }, [delay, relative?.ratio])\n\n  const num = useTransform<number, number>(\n    [state, delay],\n    ([prevState, prevDelay]) => ((prevState ?? 0) + (prevDelay ?? 0)) % 1,\n  )\n\n  const color = useTransform(\n    num,\n    [0, 0.5, 1],\n    ['#93DAE3', '#42C2D3', '#93DAE3'],\n  )\n\n  return (\n    <svg\n      className=\"drop-shadow-hexagon\"\n      height={size}\n      ref={ref}\n      viewBox=\"-150 -150 300 300\"\n      width={size}\n    >\n      <m.path\n        d=\"M130 75 L0 150 L-130 75 L-130 -75 L-0 -150 L130 -75 z\"\n        fill={color}\n      />\n    </svg>\n  )\n}\n","import { RefObject, useMemo } from 'react'\nimport { usePosition } from './usePosition'\n\nexport type RelativePosition = {\n  ratio: number\n}\n\nexport const useRelativePosition = <T extends Element, V extends Element>(\n  parentRef: RefObject<T>,\n  ref: RefObject<V>,\n): RelativePosition | null => {\n  const parentPosition = usePosition(parentRef)\n  const position = usePosition(ref)\n\n  const relativePosition = useMemo<RelativePosition | null>(() => {\n    if (!parentPosition || !position) {\n      return null\n    }\n\n    // (x1, y1)is corner of parent, (x2, y2) is center of child\n    const x1 = parentPosition.width\n    const y1 = parentPosition.height\n    const x2 = position.left - parentPosition.left + position.width / 2\n    const y2 = -(position.top - parentPosition.top) + position.height / 2\n\n    const r1_2 = x1 ** 2 + y1 ** 2\n\n    const ratio = (x1 * x2 + y1 * y2) / r1_2\n\n    return {\n      ratio,\n    }\n  }, [parentPosition, position])\n\n  return relativePosition\n}\n","import clsx from 'clsx'\nimport { useTime, useTransform } from 'framer-motion'\nimport { useRef } from 'react'\nimport { Hexagon } from '../atoms/Hexagon'\n\ntype HexagonMapProps = {\n  className?: string\n  duration?: number\n}\n\nexport const HexagonMap = ({\n  className,\n  duration = 1000,\n}: HexagonMapProps): JSX.Element => {\n  const ref = useRef(null)\n  const time = useTime()\n  const state = useTransform(time, (prev) => (prev % duration) / duration)\n\n  return (\n    <div\n      className={clsx('inline-flex flex-col gap-3 animate-pulse', className)}\n      ref={ref}\n    >\n      <div className=\"flex flex-row gap-6\">\n        {/* {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15].map((i) => (\n          <Hexagon state={state} delay={i * DELAY} key={i} parentRef={ref} size=\"15\" />\n        ))} */}\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n      </div>\n\n      <div className=\"flex flex-row gap-6\">\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n      </div>\n\n      <div className=\"flex flex-row gap-6\">\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n      </div>\n    </div>\n  )\n}\n","import clsx from 'clsx'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { useMemo } from 'react'\nimport { IconType } from 'react-icons'\nimport {\n  AiOutlineFile,\n  AiOutlineFileExcel,\n  AiOutlineFilePdf,\n} from 'react-icons/ai'\n\ntype FileProps = {\n  name: string\n}\n\nconst fileIcon: Record<string, IconType> = {\n  pdf: AiOutlineFilePdf,\n  xlsx: AiOutlineFileExcel,\n  xlx: AiOutlineFileExcel,\n}\n\nexport const File = ({ name }: FileProps): JSX.Element => {\n  const { allFile } = useStaticQuery<GatsbyTypes.FileQuery>(graphql`\n    query File {\n      allFile(filter: { sourceInstanceName: { eq: \"data\" } }) {\n        nodes {\n          id\n          extension\n          name\n          base\n          publicURL\n        }\n      }\n    }\n  `)\n\n  const file = useMemo(() => {\n    return allFile.nodes.find(\n      (node) => node.name === name || node.base === name,\n    )\n  }, [allFile.nodes, name])\n\n  const Icon = useMemo(() => {\n    if (!file) return AiOutlineFile\n    return fileIcon[file.extension] ?? AiOutlineFile\n  }, [file])\n\n  if (!file) {\n    return <div>ファイルが見つかりません</div>\n  }\n\n  return (\n    <div>\n      <a\n        className={clsx(\n          'flex flex-row gap-2 items-center py-2 px-4 rounded-md border',\n          file.extension === 'pdf'\n            ? 'text-white bg-rose-500 border-rose-500'\n            : file.extension === 'xlsx' || file.extension === 'xlx'\n            ? 'text-white bg-emerald-500 border-emerald-500'\n            : 'bg-white border-gray-600',\n        )}\n        download\n        href={file.publicURL}\n      >\n        <Icon className=\"\" size={48} />\n\n        <span className=\"text-lg\">{file.base}</span>\n      </a>\n    </div>\n  )\n}\n","import clsx from 'clsx'\nimport { FormEventHandler, forwardRef, useCallback } from 'react'\nimport { useToasts } from 'react-toast-notifications'\n\nexport const ContactForm = forwardRef<\n  HTMLFormElement,\n  JSX.IntrinsicElements['form']\n>(({ className, children, ...props }, ref) => {\n  const { addToast } = useToasts()\n\n  const onSubmit = useCallback<FormEventHandler<HTMLFormElement>>(\n    (e) => {\n      setTimeout(() => {\n        if (e.target instanceof HTMLFormElement) {\n          e.target.reset()\n        }\n        addToast('お問い合わせありがとうございます。', { autoDismiss: true })\n      })\n    },\n    [addToast],\n  )\n\n  return (\n    <form\n      className={clsx('', className)}\n      method=\"POST\"\n      onSubmit={onSubmit}\n      ref={ref}\n      target=\"contact-form-iframe\"\n      {...props}\n    >\n      {children}\n\n      <iframe className=\"hidden\" name=\"contact-form-iframe\" />\n    </form>\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const ContactFormField = forwardRef<\n  HTMLFieldSetElement,\n  JSX.IntrinsicElements['fieldset']\n>(({ className, ...props }, ref) => {\n  return (\n    <fieldset\n      className={clsx('flex flex-col gap-1', 'sm:flex-row sm:gap-4', className)}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const ContactFormFieldInput = forwardRef<\n  HTMLInputElement,\n  JSX.IntrinsicElements['input']\n>(({ className, ...props }, ref) => {\n  return (\n    <input\n      className={clsx(\n        'block flex-1 text-lg placeholder:text-gray-400 bg-gray-200 rounded-t-xl border-0',\n        'focus:border-b-2 focus:ring-0 focus:outline-none focus:border-cyan-500',\n        className,\n      )}\n      ref={ref}\n      type=\"text\"\n      {...props}\n    />\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const ContactFormFieldLabel = forwardRef<\n  HTMLParagraphElement,\n  JSX.IntrinsicElements['p']\n>(({ className, children, ...props }, ref) => {\n  return (\n    <p\n      className={clsx(\n        'flex flex-row justify-start items-center text-lg text-right min-w-[8rem]',\n        'sm:justify-end sm:text-base',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    >\n      <legend>{children}</legend>\n    </p>\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const ContactFormFieldTextarea = forwardRef<\n  HTMLTextAreaElement,\n  JSX.IntrinsicElements['textarea']\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={clsx(\n        'block flex-1 text-lg placeholder:text-gray-400 bg-gray-200 rounded-t-xl border-0',\n        'focus:border-b-2 focus:ring-0 focus:outline-none focus:border-cyan-500',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import { ContactFormField as RootContactFormField } from './ContactFormField'\nimport { ContactFormFieldInput } from './ContactFormFieldInput'\nimport { ContactFormFieldLabel } from './ContactFormFieldLabel'\nimport { ContactFormFieldTextarea } from './ContactFormFieldTextarea'\n\ntype ContactFormField = typeof RootContactFormField & {\n  Label: typeof ContactFormFieldLabel\n  Input: typeof ContactFormFieldInput\n  Textarea: typeof ContactFormFieldTextarea\n}\n\nconst ContactFormField = RootContactFormField as ContactFormField\nContactFormField.Label = ContactFormFieldLabel\nContactFormField.Input = ContactFormFieldInput\nContactFormField.Textarea = ContactFormFieldTextarea\n\nexport default ContactFormField\n","import { ContactForm as RootContactForm } from './ContactForm'\nimport ContactFormField from './ContactFormField'\n\ntype ContactForm = typeof RootContactForm & {\n  Field: typeof ContactFormField\n}\n\nconst ContactForm = RootContactForm as ContactForm\nContactForm.Field = ContactFormField\n\nexport default ContactForm\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\nimport { LinkStyle } from './LinkStyle'\n\nexport const Button = forwardRef<\n  HTMLButtonElement,\n  JSX.IntrinsicElements['button']\n>(\n  (\n    {\n      className,\n\n      ...props\n    },\n    ref,\n  ) => {\n    return (\n      <button\n        className={clsx('', LinkStyle, className)}\n        ref={ref}\n        type=\"button\"\n        {...props}\n      />\n    )\n  },\n)\n","import clsx from 'clsx'\nimport { Button } from '../Common/atoms/Button'\n\nexport const ContactFormButton = ({\n  className,\n  ...props\n}: Omit<JSX.IntrinsicElements['button'], 'ref'>): JSX.Element => {\n  return <Button className={clsx('', className)} type=\"submit\" {...props} />\n}\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const Hero = forwardRef<HTMLDivElement, JSX.IntrinsicElements['div']>(\n  ({ className, ...props }, ref) => {\n    return <div className={clsx('relative', className)} ref={ref} {...props} />\n  },\n)\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const HeroBadge = forwardRef<\n  HTMLDivElement,\n  JSX.IntrinsicElements['div']\n>(({ className, ...props }, ref) => {\n  return (\n    <div className=\"absolute top-0 right-0 z-10 drop-shadow-2xl max-h-[60%] max-w-[80%] aspect-video\">\n      <div\n        className={clsx(\n          'pt-2 pr-8 pb-20 pl-40 w-full h-full bg-cyan-500',\n          'sm:pb-44 sm:pl-64',\n          className,\n        )}\n        ref={ref}\n        style={{\n          clipPath: 'polygon(0 0, 100% 0, 100% 100%)',\n        }}\n        {...props}\n      />\n    </div>\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const HeroBadgeText = forwardRef<\n  HTMLParagraphElement,\n  JSX.IntrinsicElements['p']\n>(({ className, ...props }, ref) => {\n  return (\n    <p\n      className={clsx(\n        'text-3xl leading-normal text-gray-100 break-all',\n        'sm:w-56 sm:text-5xl',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import { HeroBadge as HeroBadgeRoot } from './HeroBadge'\nimport { HeroBadgeText } from './HeroBadgeText'\n\ntype HeroBadge = typeof HeroBadgeRoot & {\n  Text: typeof HeroBadgeText\n}\n\nconst HeroBadge = HeroBadgeRoot as HeroBadge\nHeroBadge.Text = HeroBadgeText\n\nexport default HeroBadge\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const HeroText = forwardRef<\n  HTMLParagraphElement,\n  JSX.IntrinsicElements['p']\n>(({ className, ...props }, ref) => {\n  return (\n    <p\n      className={clsx(\n        'absolute bottom-12 left-12 font-light tracking-widest',\n        'sm:bottom-36 sm:left-36 sm:text-4xl',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import { Hero as HeroRoot } from './Hero'\nimport HeroBadge from './HeroBadge'\nimport { HeroImage } from './HeroImage'\nimport { HeroText } from './HeroText'\n\ntype Hero = typeof HeroRoot & {\n  Image: typeof HeroImage\n  Text: typeof HeroText\n  Badge: typeof HeroBadge\n}\n\nconst Hero = HeroRoot as Hero\nHero.Image = HeroImage\nHero.Text = HeroText\nHero.Badge = HeroBadge\n\nexport default Hero\n","import clsx from 'clsx'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { ComponentProps } from 'react'\n\nexport const HeroImage = ({\n  className,\n  ...props\n}: ComponentProps<typeof GatsbyImage>): JSX.Element => {\n  return (\n    <div className=\"overflow-hidden relative\">\n      <GatsbyImage\n        className={clsx('object-cover w-full h-[32rem]', className)}\n        {...props}\n      />\n\n      <div className=\"absolute top-0 left-0 w-full h-full bg-white bg-opacity-60\" />\n    </div>\n  )\n}\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const Introduction = forwardRef<\n  HTMLDivElement,\n  JSX.IntrinsicElements['article']\n>(({ className, ...props }, ref) => {\n  return (\n    <article\n      className={clsx(\n        'flex flex-col md:flex-row gap-16 items-center',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const IntroductionDescription = forwardRef<\n  HTMLDivElement,\n  JSX.IntrinsicElements['div']\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      className={clsx('flex flex-col flex-1 gap-5', className)}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const IntroductionName = forwardRef<\n  HTMLDivElement,\n  JSX.IntrinsicElements['div']\n>(({ className, ...props }, ref) => {\n  return <div className={clsx('', className)} ref={ref} {...props} />\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const IntroductionNameEnglish = forwardRef<\n  HTMLParagraphElement,\n  JSX.IntrinsicElements['p']\n>(({ className, ...props }, ref) => {\n  return (\n    <p\n      className={clsx(' text-sm font-light ', className)}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const IntroductionNameJapanese = forwardRef<\n  HTMLParagraphElement,\n  JSX.IntrinsicElements['p']\n>(({ className, ...props }, ref) => {\n  return <p className={clsx(' text-2xl ', className)} ref={ref} {...props} />\n})\n","import { IntroductionName as IntroductionNameRoot } from './IntroductionName'\nimport { IntroductionNameEnglish } from './IntroductionNameEnglish'\nimport { IntroductionNameJapanese } from './IntroductionNameJapanese'\n\ntype IntroductionName = typeof IntroductionNameRoot & {\n  Japanese: typeof IntroductionNameJapanese\n  English: typeof IntroductionNameEnglish\n}\n\nconst IntroductionName = IntroductionNameRoot as IntroductionName\nIntroductionName.Japanese = IntroductionNameJapanese\nIntroductionName.English = IntroductionNameEnglish\n\nexport default IntroductionName\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const IntroductionProfile = forwardRef<\n  HTMLParagraphElement,\n  JSX.IntrinsicElements['p']\n>(({ className, ...props }, ref) => {\n  return <p className={clsx(' text-lg ', className)} ref={ref} {...props} />\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const MainSubject = forwardRef<\n  HTMLDivElement,\n  JSX.IntrinsicElements['div']\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      className={clsx('flex flex-row gap-3', className)}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const Square = forwardRef<HTMLDivElement, JSX.IntrinsicElements['i']>(\n  ({ className, ...props }, ref) => {\n    return (\n      <i className={clsx('not-italic', className)} {...props} ref={ref}>\n        ■\n      </i>\n    )\n  },\n)\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\nimport { Square } from '~/components/Common/atoms/Square'\n\nexport const MainSubjectLabel = forwardRef<\n  HTMLParagraphElement,\n  JSX.IntrinsicElements['p']\n>(({ className, children, ...props }, ref) => {\n  return (\n    <p className={clsx(' text-lg ', className)} ref={ref} {...props}>\n      <Square className=\"text-cyan-400\" />\n\n      {children}\n    </p>\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const MainSubjectName = forwardRef<\n  HTMLParagraphElement,\n  JSX.IntrinsicElements['p']\n>(({ className, ...props }, ref) => {\n  return <p className={clsx(' text-lg ', className)} ref={ref} {...props} />\n})\n","import { MainSubject as MainSubjectRoot } from './MainSubject'\nimport { MainSubjectLabel } from './MainSubjectLabel'\nimport { MainSubjectName } from './MainSubjectName'\n\ntype MainSubject = typeof MainSubjectRoot & {\n  Label: typeof MainSubjectLabel\n  Name: typeof MainSubjectName\n}\n\nconst MainSubject = MainSubjectRoot as MainSubject\nMainSubject.Label = MainSubjectLabel\nMainSubject.Name = MainSubjectName\n\nexport default MainSubject\n","import { Introduction as IntroductionRoot } from './Introduction'\nimport { IntroductionDescription } from './IntroductionDescription'\nimport { IntroductionImage } from './IntroductionImage'\nimport IntroductionName from './IntroductionName'\nimport { IntroductionProfile } from './IntroductionProfile'\nimport MainSubject from './MainSubject'\n\ntype Introduction = typeof IntroductionRoot & {\n  Name: typeof IntroductionName\n  MainSubject: typeof MainSubject\n  Description: typeof IntroductionDescription\n  Profile: typeof IntroductionProfile\n  Image: typeof IntroductionImage\n}\n\nconst Introduction = IntroductionRoot as Introduction\nIntroduction.Name = IntroductionName\nIntroduction.MainSubject = MainSubject\nIntroduction.Description = IntroductionDescription\nIntroduction.Profile = IntroductionProfile\nIntroduction.Image = IntroductionImage\n\nexport default Introduction\n","import clsx from 'clsx'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { ComponentProps } from 'react'\n\nexport const IntroductionImage = ({\n  className,\n  ...props\n}: ComponentProps<typeof GatsbyImage>): JSX.Element => {\n  return (\n    <GatsbyImage\n      className={clsx('flex-shrink-0 w-64 h-64 rounded-md', className)}\n      {...props}\n    />\n  )\n}\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const NewsList = forwardRef<\n  HTMLOListElement,\n  JSX.IntrinsicElements['ol']\n>(({ className, ...props }, ref) => {\n  return (\n    <ol\n      className={clsx('flex flex-col gap-4', className)}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import clsx from 'clsx'\nimport GatsbyLink from 'gatsby-link'\nimport { forwardRef } from 'react'\n\nexport const NewsListItem = forwardRef<\n  HTMLDivElement,\n  JSX.IntrinsicElements['section'] & {\n    newsId: string\n  }\n>(({ className, newsId, ...props }, ref) => {\n  return (\n    <li>\n      <GatsbyLink to={`/news/${newsId}`}>\n        <section\n          className={clsx(\n            'flex flex-col-reverse mx-auto max-w-4xl border-b border-cyan-600',\n            className,\n          )}\n          {...props}\n          ref={ref}\n        />\n      </GatsbyLink>\n    </li>\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const NewsListItemDate = forwardRef<\n  HTMLParagraphElement,\n  JSX.IntrinsicElements['p']\n>(({ className, ...props }, ref) => {\n  return (\n    <p\n      className={clsx(' font-light text-cyan-600', className)}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const NewsListItemTitle = forwardRef<\n  HTMLHeadingElement,\n  JSX.IntrinsicElements['h3']\n>(({ className, ...props }, ref) => {\n  return <h3 className={clsx('py-2 px-6  ', className)} ref={ref} {...props} />\n})\n","import { NewsListItem as NewsListItemRoot } from './NewsListItem'\nimport { NewsListItemDate } from './NewsListItemDate'\nimport { NewsListItemTitle } from './NewsListItemTitle'\n\ntype NewsListItem = typeof NewsListItemRoot & {\n  Date: typeof NewsListItemDate\n  Title: typeof NewsListItemTitle\n}\n\nconst NewsListItem = NewsListItemRoot as NewsListItem\nNewsListItem.Date = NewsListItemDate\nNewsListItem.Title = NewsListItemTitle\n\nexport default NewsListItem\n","import { NewsList as NewsListRoot } from './NewsList'\nimport NewsListItem from './NewsListItem'\n\ntype NewsList = typeof NewsListRoot & {\n  Item: typeof NewsListItem\n}\n\nconst NewsList = NewsListRoot as NewsList\nNewsList.Item = NewsListItem\n\nexport default NewsList\n","import { graphql as graphql, PageProps } from 'gatsby'\nimport { getImage, StaticImage } from 'gatsby-plugin-image'\nimport { useMemo } from 'react'\nimport { Link } from '~/components/Common/atoms/Link'\nimport { HexagonMap } from '~/components/Common/molecules/HexagonMap'\nimport { File } from '~/components/Common/organisms/File'\nimport { Layout } from '~/components/Common/templates/Layout'\nimport { Seo } from '~/components/Common/templates/seo'\nimport ContactForm from '~/components/ContactForm'\nimport { ContactFormButton } from '~/components/ContactForm/ContactFormButton'\nimport Hero from '~/components/Hero'\nimport Introduction from '~/components/Introduction'\nimport NewsList from '~/components/NewsList'\nimport Section from '~/components/Section'\n\nexport const query = graphql`\n  query IndexPage {\n    allFile(\n      limit: 3\n      filter: { sourceInstanceName: { eq: \"news\" }, name: { ne: \"sample\" } }\n      sort: { fields: childrenMarkdownRemark___frontmatter___date, order: DESC }\n    ) {\n      nodes {\n        id\n        name\n        childMarkdownRemark {\n          frontmatter {\n            date\n            title\n            description\n            slug\n          }\n        }\n      }\n    }\n    hero: file(sourceInstanceName: { eq: \"images\" }, name: { eq: \"hero\" }) {\n      childImageSharp {\n        gatsbyImageData\n      }\n    }\n    topImage: file(\n      sourceInstanceName: { eq: \"images\" }\n      name: { eq: \"top_image\" }\n    ) {\n      childImageSharp {\n        gatsbyImageData\n      }\n    }\n    site {\n      siteMetadata {\n        contact {\n          googleFormId\n          fields {\n            name\n            belongs\n            contactAddress\n            body\n          }\n        }\n      }\n    }\n  }\n`\n\nconst IndexPage = ({\n  data,\n}: PageProps<GatsbyTypes.IndexPageQuery>): JSX.Element => {\n  const hero = useMemo(\n    () =>\n      data.hero?.childImageSharp?.gatsbyImageData &&\n      getImage(data.hero.childImageSharp.gatsbyImageData),\n    [data.hero?.childImageSharp?.gatsbyImageData],\n  )\n\n  const topImage = useMemo(\n    () =>\n      data.topImage?.childImageSharp?.gatsbyImageData &&\n      getImage(data.topImage.childImageSharp.gatsbyImageData),\n    [data.topImage?.childImageSharp?.gatsbyImageData],\n  )\n\n  return (\n    <Layout>\n      <Seo />\n\n      <Hero className=\"mb-8\">\n        {hero && <Hero.Image alt=\"\" image={hero} />}\n\n        <Hero.Text>\n          <span className=\"text-4xl leading-normal\">\n            Health Data Science Frontier.\n          </span>\n\n          <br />\n\n          <span className=\"text-5xl leading-normal\">\n            データで医療を変えていく\n          </span>\n        </Hero.Text>\n\n        <Hero.Badge>\n          <Hero.Badge.Text>\n            Big Data <br /> Analysis\n          </Hero.Badge.Text>\n        </Hero.Badge>\n\n        <HexagonMap className=\"absolute -bottom-8 left-8\" />\n      </Hero>\n\n      <Section id=\"研究内容の紹介\">\n        <Section.Title>研究内容の紹介</Section.Title>\n\n        <Section.Body>\n          <p>研究の目的は〜〜〜</p>\n        </Section.Body>\n      </Section>\n\n      <Section className=\"z-0\" id=\"研究者案内\">\n        <HexagonMap className=\"absolute top-24 right-12 -z-10\" />\n\n        <Section.Title>研究者案内</Section.Title>\n\n        <Section.Body>\n          <Introduction>\n            <Introduction.Description>\n              <Introduction.Name>\n                <Introduction.Name.Japanese>\n                  清水 沙友里\n                </Introduction.Name.Japanese>\n\n                <Introduction.Name.English>\n                  Shimizu Sayuri\n                </Introduction.Name.English>\n              </Introduction.Name>\n\n              <Introduction.MainSubject>\n                <Introduction.MainSubject.Label>\n                  主要担当科目\n                </Introduction.MainSubject.Label>\n\n                <Introduction.MainSubject.Name>\n                  ビッグデータ解析\n                </Introduction.MainSubject.Name>\n              </Introduction.MainSubject>\n\n              <Introduction.Profile>\n                経歴やこれまでの業績など簡単に。箇条書きでも文章でも。挨拶などでも。\n                経歴やこれまでの業績など簡単に。箇条書きでも文章でも。挨拶などでも。\n                経歴やこれまでの業績など簡単に。箇条書きでも文章でも。挨拶などでも。\n                経歴やこれまでの業績など簡単に。箇条書きでも文章でも。挨拶などでも。\n              </Introduction.Profile>\n\n              <Link className=\"ml-auto\" to=\"https://researchmap.jp/ssyr\">\n                リサーチマップはこちら\n              </Link>\n            </Introduction.Description>\n\n            {topImage && (\n              <Introduction.Image alt=\"清水 沙友里\" image={topImage} />\n            )}\n          </Introduction>\n        </Section.Body>\n      </Section>\n\n      <Section className=\"z-0\" id=\"お知らせ\">\n        <HexagonMap className=\"absolute bottom-0 left-4 -z-10\" />\n\n        <Section.Title>お知らせ</Section.Title>\n\n        <Section.Body>\n          <NewsList className=\"mb-8\">\n            {data.allFile.nodes.map(({ id, name, childMarkdownRemark }) => (\n              <NewsList.Item\n                key={id}\n                newsId={childMarkdownRemark?.frontmatter?.slug ?? name}\n              >\n                <NewsList.Item.Title>\n                  {childMarkdownRemark?.frontmatter?.title}\n                </NewsList.Item.Title>\n\n                <NewsList.Item.Date>\n                  {childMarkdownRemark?.frontmatter?.date}\n                </NewsList.Item.Date>\n              </NewsList.Item>\n            ))}\n          </NewsList>\n\n          <div className=\"mx-auto max-w-4xl\">\n            <Link className=\"block ml-auto max-w-max\" to=\"/news\">\n              お知らせ一覧\n            </Link>\n          </div>\n        </Section.Body>\n      </Section>\n\n      <Section id=\"データの更新\">\n        <Section.Title>データの更新</Section.Title>\n\n        <Section.Body>\n          <div className=\"flex flex-col gap-1 max-w-md\">\n            <File name=\"POST.pdf\" />\n\n            <File name=\"郵便番号二次医療圏対応表2017.xlsx\" />\n\n            <File name=\"PHA2017_6月版.xlsx\" />\n\n            <File name=\"HOSPPHA.pdf\" />\n\n            <File name=\"HOSP2017_7月版.xlsx\" />\n          </div>\n        </Section.Body>\n      </Section>\n\n      <Section className=\"z-0\" id=\"お問い合わせ\">\n        <HexagonMap className=\"absolute right-7 bottom-24 -z-10\" />\n\n        <Section.Title>お問い合わせ</Section.Title>\n\n        <Section.Body>\n          <ContactForm\n            action={`https://docs.google.com/forms/u/0/d/e/${data.site?.siteMetadata?.contact?.googleFormId}/formResponse`}\n          >\n            <div className=\"flex flex-col lg:flex-row gap-3 lg:gap-8 mb-8\">\n              <div className=\"flex flex-col flex-1 gap-3\">\n                <ContactForm.Field>\n                  <ContactForm.Field.Label>名前</ContactForm.Field.Label>\n\n                  <ContactForm.Field.Input\n                    name={data.site?.siteMetadata?.contact?.fields?.name}\n                    placeholder=\"山田 太郎\"\n                    required\n                  />\n                </ContactForm.Field>\n\n                <ContactForm.Field>\n                  <ContactForm.Field.Label>所属</ContactForm.Field.Label>\n\n                  <ContactForm.Field.Input\n                    name={data.site?.siteMetadata?.contact?.fields?.belongs}\n                    placeholder=\"横浜市立大学 ヘルスデータサイエンス学科\"\n                  />\n                </ContactForm.Field>\n\n                <ContactForm.Field>\n                  <ContactForm.Field.Label>連絡先</ContactForm.Field.Label>\n\n                  <ContactForm.Field.Input\n                    name={\n                      data.site?.siteMetadata?.contact?.fields?.contactAddress\n                    }\n                    placeholder=\"email@example.com 又は 090-1234-5678\"\n                  />\n                </ContactForm.Field>\n              </div>\n\n              <div className=\"flex-1\">\n                <ContactForm.Field className=\"h-full\">\n                  <ContactForm.Field.Label className=\"lg:sr-only\">\n                    お問い合わせ内容\n                  </ContactForm.Field.Label>\n\n                  <ContactForm.Field.Textarea\n                    name={data.site?.siteMetadata?.contact?.fields?.body}\n                    placeholder=\"詳しい内容をお書きください\"\n                    required\n                    rows={4}\n                  />\n                </ContactForm.Field>\n              </div>\n            </div>\n\n            <ContactFormButton className=\"block mx-auto\">\n              送信する\n            </ContactFormButton>\n          </ContactForm>\n        </Section.Body>\n      </Section>\n\n      <Section>\n        <Section.Title>関連リンク</Section.Title>\n\n        <Section.Body>\n          <div className=\"flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-4\">\n            <a className=\"block flex-1 md:h-full\" href=\"#\">\n              <span className=\"sr-only\">\n                横浜市立大学 データサイエンス研究科 ヘルスデータサイエンス専攻\n              </span>\n\n              <StaticImage\n                alt=\"横浜市立大学 データサイエンス研究科 ヘルスデータサイエンス専攻\"\n                layout=\"fullWidth\"\n                src=\"../images/HDS.png\"\n              />\n            </a>\n\n            <a className=\"block flex-1 md:h-full\" href=\"#\">\n              <span className=\"sr-only\">横浜市立大学</span>\n\n              <StaticImage\n                alt=\"横浜市立大学\"\n                layout=\"fullWidth\"\n                src=\"../images/YCU.png\"\n              />\n            </a>\n          </div>\n        </Section.Body>\n      </Section>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"names":["LinkStyle","clsx","Link","className","to","props","location","useLocation","useMemo","startsWith","toUrl","URL","locationUrl","href","origin","rel","target","getCurrentTime","performance","now","Date","useMotionValue","initial","value","useContext","MotionConfigContext","isStatic","setLatest_1","useState","useEffect","onChange","useTime","callback","initialTimestamp","time","t","set","provideTimeSinceStart","_a","timestamp","getMixer","v","mix","isCustomValueType","undefined","useCombineMotionValues","values","combineValues","updateValue","handler","subscriptions","map","forEach","unsubscribe","useMultiOnChange","useTransform","input","inputRangeOrTransformer","outputRange","options","transformer","args","_i","arguments","length","useImmediate","Array","isArray","argOffset","inputValue","inputRange","interpolator","interpolate","mixer","transform","useListTransform","latest","numValues","i","get","Hexagon","size","parentRef","state","ref","useRef","relative","parentPosition","usePosition","position","x1","width","y1","height","ratio","left","top","useRelativePosition","delay","num","prevState","prevDelay","color","viewBox","m","d","fill","HexagonMap","duration","prev","fileIcon","pdf","AiOutlineFilePdf","xlsx","AiOutlineFileExcel","xlx","File","name","allFile","useStaticQuery","file","nodes","find","node","base","Icon","extension","AiOutlineFile","download","publicURL","ContactForm","forwardRef","children","addToast","useToasts","onSubmit","useCallback","e","setTimeout","HTMLFormElement","reset","autoDismiss","method","ContactFormField","ContactFormFieldInput","type","ContactFormFieldLabel","ContactFormFieldTextarea","RootContactFormField","Label","Input","Textarea","RootContactForm","Field","Button","ContactFormButton","Hero","HeroBadge","style","clipPath","HeroBadgeText","HeroBadgeRoot","Text","HeroText","HeroRoot","Image","G","Badge","Introduction","IntroductionDescription","IntroductionName","IntroductionNameEnglish","IntroductionNameJapanese","IntroductionNameRoot","Japanese","English","IntroductionProfile","MainSubject","Square","MainSubjectLabel","MainSubjectName","MainSubjectRoot","Name","IntroductionRoot","Description","Profile","NewsList","NewsListItem","newsId","NewsListItemDate","NewsListItemTitle","NewsListItemRoot","Title","NewsListRoot","Item","data","hero","childImageSharp","gatsbyImageData","getImage","topImage","Layout","alt","image","Section","id","childMarkdownRemark","frontmatter","slug","title","date","action","site","siteMetadata","contact","googleFormId","fields","placeholder","required","belongs","contactAddress","body","rows","S","layout","src"],"sourceRoot":""}