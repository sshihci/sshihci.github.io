{"version":3,"file":"component---src-pages-news-tsx-15d87c5a63a4c3d4f374.js","mappings":"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","sources":["webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/utils/use-force-update.mjs","webpack://sshihci.github.io/./src/hooks/usePagination.ts","webpack://sshihci.github.io/./src/hooks/useNumber.ts","webpack://sshihci.github.io/./src/components/Common/organisms/PagerDot.tsx","webpack://sshihci.github.io/./src/components/Common/organisms/Pager.tsx","webpack://sshihci.github.io/./src/lib/range.ts","webpack://sshihci.github.io/./src/components/Common/organisms/Pagination.tsx","webpack://sshihci.github.io/./src/pages/news.tsx"],"sourcesContent":["import { __values } from 'tslib';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nvar presenceId = 0;\n\nfunction getPresenceId() {\n  var id = presenceId;\n  presenceId++;\n  return id;\n}\n\nvar PresenceChild = function PresenceChild(_a) {\n  var children = _a.children,\n      initial = _a.initial,\n      isPresent = _a.isPresent,\n      _onExitComplete = _a.onExitComplete,\n      custom = _a.custom,\n      presenceAffectsLayout = _a.presenceAffectsLayout;\n  var presenceChildren = useConstant(newChildrenMap);\n  var id = useConstant(getPresenceId);\n  var context = useMemo(function () {\n    return {\n      id: id,\n      initial: initial,\n      isPresent: isPresent,\n      custom: custom,\n      onExitComplete: function onExitComplete(childId) {\n        var e_1, _a;\n\n        presenceChildren.set(childId, true);\n\n        try {\n          for (var _b = __values(presenceChildren.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var isComplete = _c.value;\n            if (!isComplete) return; // can stop searching when any is incomplete\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n\n        _onExitComplete === null || _onExitComplete === void 0 ? void 0 : _onExitComplete();\n      },\n      register: function register(childId) {\n        presenceChildren.set(childId, false);\n        return function () {\n          return presenceChildren.delete(childId);\n        };\n      }\n    };\n  },\n  /**\n   * If the presence of a child affects the layout of the components around it,\n   * we want to make a new context value to ensure they get re-rendered\n   * so they can detect that layout change.\n   */\n  presenceAffectsLayout ? undefined : [isPresent]);\n  useMemo(function () {\n    presenceChildren.forEach(function (_, key) {\n      return presenceChildren.set(key, false);\n    });\n  }, [isPresent]);\n  /**\n   * If there's no `motion` components to fire exit animations, we want to remove this\n   * component immediately.\n   */\n\n  React.useEffect(function () {\n    !isPresent && !presenceChildren.size && (_onExitComplete === null || _onExitComplete === void 0 ? void 0 : _onExitComplete());\n  }, [isPresent]);\n  return React.createElement(PresenceContext.Provider, {\n    value: context\n  }, children);\n};\n\nfunction newChildrenMap() {\n  return new Map();\n}\n\nexport { PresenceChild };","import { __read, __spreadArray } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useRef, useEffect, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\n\nfunction getChildKey(child) {\n  return child.key || \"\";\n}\n\nfunction updateChildLookup(children, allChildren) {\n  var seenChildren = process.env.NODE_ENV !== \"production\" ? new Set() : null;\n  children.forEach(function (child) {\n    var key = getChildKey(child);\n\n    if (process.env.NODE_ENV !== \"production\" && seenChildren) {\n      if (seenChildren.has(key)) {\n        console.warn(\"Children of AnimatePresence require unique keys. \\\"\".concat(key, \"\\\" is a duplicate.\"));\n      }\n\n      seenChildren.add(key);\n    }\n\n    allChildren.set(key, child);\n  });\n}\n\nfunction onlyElements(children) {\n  var filtered = []; // We use forEach here instead of map as map mutates the component key by preprending `.$`\n\n  Children.forEach(children, function (child) {\n    if (isValidElement(child)) filtered.push(child);\n  });\n  return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\n\n\nvar AnimatePresence = function AnimatePresence(_a) {\n  var children = _a.children,\n      custom = _a.custom,\n      _b = _a.initial,\n      initial = _b === void 0 ? true : _b,\n      onExitComplete = _a.onExitComplete,\n      exitBeforeEnter = _a.exitBeforeEnter,\n      _c = _a.presenceAffectsLayout,\n      presenceAffectsLayout = _c === void 0 ? true : _c; // We want to force a re-render once all exiting animations have finished. We\n  // either use a local forceRender function, or one from a parent context if it exists.\n\n  var _d = __read(useForceUpdate(), 1),\n      forceRender = _d[0];\n\n  var forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n  if (forceRenderLayoutGroup) forceRender = forceRenderLayoutGroup;\n  var isInitialRender = useRef(true);\n  var isMounted = useRef(true);\n  useEffect(function () {\n    return function () {\n      isMounted.current = false;\n    };\n  }, []); // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n\n  var filteredChildren = onlyElements(children); // Keep a living record of the children we're actually rendering so we\n  // can diff to figure out which are entering and exiting\n\n  var presentChildren = useRef(filteredChildren); // A lookup table to quickly reference components by key\n\n  var allChildren = useRef(new Map()).current; // A living record of all currently exiting components.\n\n  var exiting = useRef(new Set()).current;\n  updateChildLookup(filteredChildren, allChildren); // If this is the initial component render, just deal with logic surrounding whether\n  // we play onMount animations or not.\n\n  if (isInitialRender.current) {\n    isInitialRender.current = false;\n    return React.createElement(React.Fragment, null, filteredChildren.map(function (child) {\n      return React.createElement(PresenceChild, {\n        key: getChildKey(child),\n        isPresent: true,\n        initial: initial ? undefined : false,\n        presenceAffectsLayout: presenceAffectsLayout\n      }, child);\n    }));\n  } // If this is a subsequent render, deal with entering and exiting children\n\n\n  var childrenToRender = __spreadArray([], __read(filteredChildren), false); // Diff the keys of the currently-present and target children to update our\n  // exiting list.\n\n\n  var presentKeys = presentChildren.current.map(getChildKey);\n  var targetKeys = filteredChildren.map(getChildKey); // Diff the present children with our target children and mark those that are exiting\n\n  var numPresent = presentKeys.length;\n\n  for (var i = 0; i < numPresent; i++) {\n    var key = presentKeys[i];\n\n    if (targetKeys.indexOf(key) === -1) {\n      exiting.add(key);\n    } else {\n      // In case this key has re-entered, remove from the exiting list\n      exiting.delete(key);\n    }\n  } // If we currently have exiting children, and we're deferring rendering incoming children\n  // until after all current children have exiting, empty the childrenToRender array\n\n\n  if (exitBeforeEnter && exiting.size) {\n    childrenToRender = [];\n  } // Loop through all currently exiting components and clone them to overwrite `animate`\n  // with any `exit` prop they might have defined.\n\n\n  exiting.forEach(function (key) {\n    // If this component is actually entering again, early return\n    if (targetKeys.indexOf(key) !== -1) return;\n    var child = allChildren.get(key);\n    if (!child) return;\n    var insertionIndex = presentKeys.indexOf(key);\n\n    var onExit = function onExit() {\n      allChildren.delete(key);\n      exiting.delete(key); // Remove this child from the present children\n\n      var removeIndex = presentChildren.current.findIndex(function (presentChild) {\n        return presentChild.key === key;\n      });\n      presentChildren.current.splice(removeIndex, 1); // Defer re-rendering until all exiting children have indeed left\n\n      if (!exiting.size) {\n        presentChildren.current = filteredChildren;\n\n        if (isMounted.current === false) {\n          return;\n        }\n\n        forceRender();\n        onExitComplete && onExitComplete();\n      }\n    };\n\n    childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, {\n      key: getChildKey(child),\n      isPresent: false,\n      onExitComplete: onExit,\n      custom: custom,\n      presenceAffectsLayout: presenceAffectsLayout\n    }, child));\n  }); // Add `MotionContext` even to children that don't need it to ensure we're rendering\n  // the same tree between renders\n\n  childrenToRender = childrenToRender.map(function (child) {\n    var key = child.key;\n    return exiting.has(key) ? child : React.createElement(PresenceChild, {\n      key: getChildKey(child),\n      isPresent: true,\n      presenceAffectsLayout: presenceAffectsLayout\n    }, child);\n  });\n  presentChildren.current = childrenToRender;\n\n  if (process.env.NODE_ENV !== \"production\" && exitBeforeEnter && childrenToRender.length > 1) {\n    console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n  }\n\n  return React.createElement(React.Fragment, null, exiting.size ? childrenToRender : childrenToRender.map(function (child) {\n    return cloneElement(child);\n  }));\n};\n\nexport { AnimatePresence };","import { __read } from 'tslib';\nimport sync from 'framesync';\nimport { useRef, useState, useCallback } from 'react';\nimport { useUnmountEffect } from './use-unmount-effect.mjs';\n\nfunction useForceUpdate() {\n  var isUnmountingRef = useRef(false);\n\n  var _a = __read(useState(0), 2),\n      forcedRenderCount = _a[0],\n      setForcedRenderCount = _a[1];\n\n  useUnmountEffect(function () {\n    return isUnmountingRef.current = true;\n  });\n  var forceRender = useCallback(function () {\n    !isUnmountingRef.current && setForcedRenderCount(forcedRenderCount + 1);\n  }, [forcedRenderCount]);\n  /**\n   * Defer this to the end of the next animation frame in case there are multiple\n   * synchronous calls.\n   */\n\n  var deferredForceRender = useCallback(function () {\n    return sync.postRender(forceRender);\n  }, [forceRender]);\n  return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };","import { useCallback, useMemo } from 'react'\nimport { useNumber } from './useNumber'\n\ntype UsePagination<T> = {\n  currentPage: number\n  nextPage: number | null\n  hasNextPage: boolean\n  prevPage: number | null\n  hasPrevPage: boolean\n  totalPage: number\n  currentItems: ReadonlyArray<T>\n  goToNextPage: () => void\n  goToPrevPage: () => void\n  goTo: (page: number) => void\n}\n\ntype UsePaginationOptions<T> = {\n  initial?: number\n  perPage: number\n  items: ReadonlyArray<T>\n}\n\nexport const usePagination = <T>({\n  perPage,\n  items,\n  initial = 1,\n}: UsePaginationOptions<T>): UsePagination<T> => {\n  const [currentPage, { increment, decrement, setValue }] = useNumber(initial)\n\n  const totalPage = useMemo(() => {\n    return Math.ceil(items.length / perPage)\n  }, [perPage, items.length])\n\n  const nextPage = useMemo(() => {\n    if (currentPage < totalPage) {\n      return currentPage + 1\n    }\n    return null\n  }, [currentPage, totalPage])\n\n  const hasNextPage = useMemo(() => {\n    return nextPage !== null\n  }, [nextPage])\n\n  const prevPage = useMemo(() => {\n    if (currentPage > 1) {\n      return currentPage - 1\n    }\n    return null\n  }, [currentPage])\n\n  const hasPrevPage = useMemo(() => {\n    return prevPage !== null\n  }, [prevPage])\n\n  const currentItems = useMemo(() => {\n    const start = (currentPage - 1) * perPage\n    const end = currentPage * perPage\n    return items.slice(start, end)\n  }, [currentPage, items, perPage])\n\n  const goToNextPage = useCallback(() => {\n    if (nextPage) {\n      increment()\n    }\n  }, [increment, nextPage])\n\n  const goToPrevPage = useCallback(() => {\n    if (prevPage) {\n      decrement()\n    }\n  }, [decrement, prevPage])\n\n  const goTo = useCallback(\n    (page: number) => {\n      if (page > 0 && page <= totalPage) {\n        setValue(page)\n      }\n    },\n    [setValue, totalPage],\n  )\n\n  return {\n    currentItems,\n    currentPage,\n    goTo,\n    goToNextPage,\n    goToPrevPage,\n    hasNextPage,\n    hasPrevPage,\n    nextPage,\n    prevPage,\n    totalPage,\n  }\n}\n","import { useCallback, useState } from 'react'\n\ntype UseNumber = [\n  number,\n  {\n    incrementN: (n: number) => void\n    decrementN: (n: number) => void\n    increment: () => void\n    decrement: () => void\n    setValue: (n: number) => void\n  },\n]\n\nexport const useNumber = (initial = 0): UseNumber => {\n  const [value, setValue] = useState(initial)\n\n  const incrementN = useCallback(\n    (n: number) => setValue((prev) => prev + n),\n    [],\n  )\n  const increment = useCallback(() => incrementN(1), [incrementN])\n\n  const decrementN = useCallback(\n    (n: number) => setValue((prev) => prev - n),\n    [],\n  )\n  const decrement = useCallback(() => decrementN(1), [decrementN])\n\n  return [value, { decrement, decrementN, increment, incrementN, setValue }]\n}\n","import { m } from 'framer-motion'\nimport { useMemo } from 'react'\nimport { VscCircleFilled, VscCircleLargeFilled } from 'react-icons/vsc'\nimport { useBoolean } from '~/hooks/useBoolean'\n\ntype PagerDotProps = {\n  onClick: () => void\n  isCurrent: boolean\n  page: number\n}\n\nexport const PagerDot = ({\n  onClick,\n  isCurrent,\n  page,\n}: PagerDotProps): JSX.Element => {\n  const [isHovered, { setTrue, setFalse }] = useBoolean()\n\n  const Dot = useMemo(() => {\n    return isCurrent ? VscCircleLargeFilled : VscCircleFilled\n  }, [isCurrent])\n\n  return (\n    <div className=\"flex flex-row justify-center\">\n      <button\n        className=\"relative w-4 h-4\"\n        onClick={onClick}\n        onMouseEnter={setTrue}\n        onMouseLeave={setFalse}\n        onTouchEnd={setFalse}\n        onTouchStart={setTrue}\n        type=\"button\"\n      >\n        <m.div animate={{ scale: isHovered ? 0.1 : 1 }}>\n          <Dot size={12} />\n        </m.div>\n\n        <m.div\n          animate={{ scale: isHovered ? 1 : 0 }}\n          className=\"absolute -top-2\"\n        >\n          <span>{page}</span>\n        </m.div>\n      </button>\n    </div>\n  )\n}\n","import clsx from 'clsx'\nimport { useCallback } from 'react'\nimport { AiOutlineLeft, AiOutlineRight } from 'react-icons/ai'\nimport { range } from '~/lib/range'\nimport { PagerDot } from './PagerDot'\n\ntype PagerProps = {\n  goToPrevPage: () => void\n  goToNextPage: () => void\n  goTo: (page: number) => void\n  hasPrevPage: boolean\n  hasNextPage: boolean\n  totalPage: number\n  currentPage: number\n  className?: string\n}\n\nexport const Pager = ({\n  goToNextPage,\n  goToPrevPage,\n  hasNextPage,\n  hasPrevPage,\n  totalPage,\n  className,\n  currentPage,\n  goTo,\n}: PagerProps): JSX.Element => {\n  const getGoTo = useCallback((page: number) => () => goTo(page), [goTo])\n\n  return (\n    <div className={clsx('flex flex-row gap-2 items-center', className)}>\n      <div className=\"flex flex-row justify-center\">\n        <button disabled={!hasPrevPage} onClick={goToPrevPage} type=\"button\">\n          <AiOutlineLeft size={24} />\n        </button>\n      </div>\n\n      <div className=\"flex flex-row gap-2 items-center\">\n        {range(1, totalPage + 1).map((page) => (\n          <PagerDot\n            isCurrent={currentPage === page}\n            key={page}\n            onClick={getGoTo(page)}\n            page={page}\n          />\n        ))}\n      </div>\n\n      <div className=\"flex flex-row justify-center\">\n        <button disabled={!hasNextPage} onClick={goToNextPage} type=\"button\">\n          <AiOutlineRight size={24} />\n        </button>\n      </div>\n    </div>\n  )\n}\n","/**\n * @example ```typescript\n * range(0, 10) // [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n * range(1, 11) // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n * ```\n */\nexport const range = (start: number, end: number): number[] =>\n  [...Array(end - start)].map((_, i) => start + i)\n","import clsx from 'clsx'\nimport { AnimatePresence, m } from 'framer-motion'\nimport { Key, ReactNode, useRef } from 'react'\nimport { usePagination } from '~/hooks/usePagination'\nimport { usePosition } from '~/hooks/usePosition'\nimport { Pager } from './Pager'\n\ntype PaginationItemProps = {\n  children?: ReactNode\n  index: number\n}\n\nconst PaginationItem = ({\n  children,\n  index,\n}: PaginationItemProps): JSX.Element => {\n  const ref = useRef(null)\n  const position = usePosition(ref)\n\n  return (\n    <m.div\n      animate={{ opacity: 1, x: 0 }}\n      exit={{\n        opacity: 0,\n        position: 'absolute',\n        top: (position?.height ?? 0) * index,\n        width: '100%',\n        x: -300,\n      }}\n      initial={{ opacity: 0, x: 300 }}\n      ref={ref}\n      role=\"listitem\"\n      transition={{\n        duration: 0.3,\n      }}\n    >\n      {children}\n    </m.div>\n  )\n}\n\nexport type PaginationRenderItemProps<T, V> = {\n  item: Readonly<T>\n  index: number\n  commonProps: V\n}\n\nexport type PaginationRenderItem<T, V> = (\n  props: PaginationRenderItemProps<T, V>,\n) => ReactNode\n\nexport type PaginationProps<T, V> = {\n  items: ReadonlyArray<T>\n  perPage: number\n  renderItem: PaginationRenderItem<T, V>\n  keyExtractor: (item: T) => Key\n  commonProps: V\n  className?: string\n  listClassName?: string\n}\n\nexport const Pagination = <T, V>({\n  items,\n  perPage,\n  renderItem,\n  commonProps,\n  keyExtractor,\n  listClassName,\n  className,\n}: PaginationProps<T, V>): JSX.Element => {\n  const {\n    currentPage,\n    totalPage,\n    currentItems,\n    goToPrevPage,\n    goToNextPage,\n    hasNextPage,\n    hasPrevPage,\n    goTo,\n  } = usePagination({\n    items,\n    perPage,\n  })\n\n  return (\n    <div className={clsx('', className)}>\n      <div\n        className={clsx('flex relative flex-col', listClassName)}\n        role=\"list\"\n      >\n        <AnimatePresence>\n          {currentItems.map((item, index) => (\n            <PaginationItem index={index} key={keyExtractor(item)}>\n              {renderItem({ commonProps, index, item })}\n            </PaginationItem>\n          ))}\n        </AnimatePresence>\n      </div>\n\n      <Pager\n        className=\"mx-auto max-w-max\"\n        currentPage={currentPage}\n        goTo={goTo}\n        goToNextPage={goToNextPage}\n        goToPrevPage={goToPrevPage}\n        hasNextPage={hasNextPage}\n        hasPrevPage={hasPrevPage}\n        totalPage={totalPage}\n      />\n    </div>\n  )\n}\n","import { graphql as graphql, PageProps } from 'gatsby'\nimport { NewsListItem } from '~/components/Common/organisms/NewsListItem'\nimport {\n  Pagination,\n  PaginationRenderItem,\n} from '~/components/Common/organisms/Pagination'\nimport { Layout } from '~/components/Common/templates/Layout'\nimport { Seo } from '~/components/Common/templates/seo'\nimport Section from '~/components/Section'\nimport { NewsItemFragment, NewsPageQuery } from '~graphql-types'\n\nexport const query = graphql`\n  fragment NewsItem on File {\n    id\n    ...NewsListItem\n  }\n  query NewsPage {\n    allFile(\n      filter: {\n        sourceInstanceName: { eq: \"news\" }\n        name: { ne: \"sample\" }\n        extension: { eq: \"md\" }\n        childMarkdownRemark: { frontmatter: { noIndex: { ne: true } } }\n      }\n      sort: { fields: childrenMarkdownRemark___frontmatter___date, order: DESC }\n    ) {\n      nodes {\n        ...NewsItem\n      }\n    }\n    site {\n      siteMetadata {\n        newsPerPage\n      }\n    }\n  }\n`\n\nconst keyExtractor = (item: NewsItemFragment) => item.id\n\nconst RenderItem: PaginationRenderItem<\n  NewsItemFragment,\n  Record<string, unknown>\n> = ({ item }) => {\n  return <NewsListItem {...item} />\n}\n\nconst NewsPage = ({ data }: PageProps<NewsPageQuery>): JSX.Element => {\n  return (\n    <Layout>\n      <Seo title=\"お知らせ一覧\" />\n\n      <Section>\n        <Section.Title>お知らせ一覧</Section.Title>\n\n        <Section.Body>\n          <Pagination\n            className=\"mx-auto max-w-4xl\"\n            commonProps={{}}\n            items={data.allFile.nodes}\n            keyExtractor={keyExtractor}\n            listClassName=\"mb-4\"\n            perPage={data.site?.siteMetadata?.newsPerPage ?? 5}\n            renderItem={RenderItem}\n          />\n        </Section.Body>\n      </Section>\n    </Layout>\n  )\n}\n\nexport default NewsPage\n"],"names":["presenceId","getPresenceId","id","PresenceChild","_a","children","initial","isPresent","_onExitComplete","onExitComplete","custom","presenceAffectsLayout","presenceChildren","newChildrenMap","context","useMemo","childId","e_1","set","_b","values","_c","next","done","value","e_1_1","error","return","call","register","delete","undefined","forEach","_","key","size","PresenceContext","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","_d","isUnmountingRef","useRef","useState","forcedRenderCount","setForcedRenderCount","current","forceRender","useCallback","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","isInitialRender","isMounted","useEffect","filteredChildren","filtered","Children","isValidElement","push","onlyElements","presentChildren","allChildren","exiting","Set","updateChildLookup","map","childrenToRender","presentKeys","targetKeys","numPresent","length","i","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","usePagination","perPage","items","setValue","incrementN","n","prev","increment","decrementN","decrement","useNumber","currentPage","totalPage","Math","ceil","nextPage","hasNextPage","prevPage","hasPrevPage","currentItems","start","end","slice","goToNextPage","goToPrevPage","goTo","page","PagerDot","onClick","isCurrent","useBoolean","isHovered","setTrue","setFalse","Dot","VscCircleLargeFilled","VscCircleFilled","className","onMouseEnter","onMouseLeave","onTouchEnd","onTouchStart","type","m","animate","scale","Pager","getGoTo","clsx","disabled","Array","PaginationItem","index","ref","position","usePosition","opacity","x","exit","top","height","width","role","transition","duration","Pagination","renderItem","commonProps","keyExtractor","listClassName","item","RenderItem","NewsListItem","data","Layout","title","Section","allFile","nodes","site","siteMetadata","newsPerPage"],"sourceRoot":""}