{"version":3,"file":"component---src-pages-index-tsx-bd2dbd24b083617cd485.js","mappings":"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","sources":["webpack://sshihci.github.io/./src/components/Common/atoms/Button.tsx","webpack://sshihci.github.io/./src/components/Common/atoms/Link.tsx","webpack://sshihci.github.io/./src/components/Common/atoms/LinkStyle.ts","webpack://sshihci.github.io/./src/components/Common/organisms/File.tsx","webpack://sshihci.github.io/./src/components/DataSection/DataSectionBlock.tsx","webpack://sshihci.github.io/./src/hooks/useIsSameSite.ts","webpack://sshihci.github.io/./src/lib/is-not-nullable.ts","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/utils/use-animation-frame.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/value/use-motion-value.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/value/use-time.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/utils/transform.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/value/use-combine-values.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/value/use-on-change.mjs","webpack://sshihci.github.io/./node_modules/framer-motion/dist/es/value/use-transform.mjs","webpack://sshihci.github.io/./src/components/Common/atoms/Hexagon.tsx","webpack://sshihci.github.io/./src/hooks/useRelativePosition.ts","webpack://sshihci.github.io/./src/components/Common/molecules/HexagonMap.tsx","webpack://sshihci.github.io/./src/components/ContactForm/ContactForm.tsx","webpack://sshihci.github.io/./src/components/ContactForm/ContactFormField/ContactFormField.tsx","webpack://sshihci.github.io/./src/components/ContactForm/ContactFormField/ContactFormFieldInput.tsx","webpack://sshihci.github.io/./src/components/ContactForm/ContactFormField/ContactFormFieldLabel.tsx","webpack://sshihci.github.io/./src/components/ContactForm/ContactFormField/ContactFormFieldTextarea.tsx","webpack://sshihci.github.io/./src/components/ContactForm/ContactFormField/index.ts","webpack://sshihci.github.io/./src/components/ContactForm/index.ts","webpack://sshihci.github.io/./src/components/ContactForm/ContactFormButton.tsx","webpack://sshihci.github.io/./src/components/Hero/Hero.tsx","webpack://sshihci.github.io/./src/components/Hero/HeroText.tsx","webpack://sshihci.github.io/./src/components/Hero/index.ts","webpack://sshihci.github.io/./src/components/Hero/HeroImage.tsx","webpack://sshihci.github.io/./src/components/Introduction/Introduction.tsx","webpack://sshihci.github.io/./src/components/Introduction/IntroductionDescription.tsx","webpack://sshihci.github.io/./src/components/Introduction/IntroductionName/IntroductionName.tsx","webpack://sshihci.github.io/./src/components/Introduction/IntroductionName/IntroductionNameEnglish.tsx","webpack://sshihci.github.io/./src/components/Introduction/IntroductionName/IntroductionNameJapanese.tsx","webpack://sshihci.github.io/./src/components/Introduction/IntroductionName/index.ts","webpack://sshihci.github.io/./src/components/Introduction/IntroductionProfile.tsx","webpack://sshihci.github.io/./src/components/Introduction/MainSubject/MainSubject.tsx","webpack://sshihci.github.io/./src/components/Common/atoms/Square.tsx","webpack://sshihci.github.io/./src/components/Introduction/MainSubject/MainSubjectLabel.tsx","webpack://sshihci.github.io/./src/components/Introduction/MainSubject/MainSubjectName.tsx","webpack://sshihci.github.io/./src/components/Introduction/MainSubject/index.ts","webpack://sshihci.github.io/./src/components/Introduction/index.ts","webpack://sshihci.github.io/./src/components/Introduction/IntroductionImage.tsx","webpack://sshihci.github.io/./src/components/NewsList/index.ts","webpack://sshihci.github.io/./src/components/NewsList/NewsList.tsx","webpack://sshihci.github.io/./src/components/ResearchList/ResearchList.tsx","webpack://sshihci.github.io/./src/components/ResearchList/ResearchListItem/ResearchListItem.tsx","webpack://sshihci.github.io/./src/components/ResearchList/ResearchListItem/ResearchListItemBody.tsx","webpack://sshihci.github.io/./src/components/ResearchList/ResearchListItem/ResearchListItemTitle.tsx","webpack://sshihci.github.io/./src/components/ResearchList/ResearchListItem/index.ts","webpack://sshihci.github.io/./src/components/ResearchList/index.ts","webpack://sshihci.github.io/./src/pages/index.tsx","webpack://sshihci.github.io/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js"],"sourcesContent":["import clsx from 'clsx'\nimport { forwardRef } from 'react'\nimport { LinkStyle } from './LinkStyle'\n\nexport type ButtonProps = JSX.IntrinsicElements['button'] & {\n  isActive?: boolean\n}\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      isActive,\n\n      ...props\n    },\n    ref,\n  ) => {\n    return (\n      <button\n        className={clsx(\n          '',\n          LinkStyle,\n          isActive &&\n            `after:absolute after:right-4 after:leading-6 rounded-2xl before:!right-0 after:content-arrow-right-icon`,\n          className,\n        )}\n        ref={ref}\n        type=\"button\"\n        {...props}\n      />\n    )\n  },\n)\n","import clsx from 'clsx'\nimport { GatsbyLinkProps, Link as GatsbyLink } from 'gatsby'\nimport { useIsSameSite } from '~/hooks/useIsSameSite'\nimport { LinkStyle } from './LinkStyle'\n\nexport const Link = ({\n  className,\n  to,\n  ...props\n}: Omit<GatsbyLinkProps<Record<string, unknown>>, 'ref'>): JSX.Element => {\n  const isSameSite = useIsSameSite(to)\n\n  if (isSameSite) {\n    return (\n      <GatsbyLink\n        className={clsx('', LinkStyle, className)}\n        to={to}\n        {...props}\n      />\n    )\n  }\n  return (\n    <a\n      className={clsx('', LinkStyle, className)}\n      href={to}\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n      {...props}\n    />\n  )\n}\n","import clsx from 'clsx'\n\nexport const LinkStyle = clsx(\n  'overflow-hidden relative py-1.5 px-6 text-sm text-center bg-gray-50 border min-w-[13rem] border-cyan-600 text-cyan-600',\n  'before:absolute before:w-full before:h-full before:bg-opacity-30 before:duration-200 before:bg-cyan-200',\n  'before:top-0 before:right-full hover:before:right-0',\n  'hover:rounded-2xl duration-500',\n)\n","import clsx from 'clsx'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { useMemo } from 'react'\nimport { IconType } from 'react-icons'\nimport {\n  AiOutlineFile,\n  AiOutlineFileExcel,\n  AiOutlineFilePdf,\n} from 'react-icons/ai'\nimport { FileQuery } from '~graphql-types'\n\nconst fileIcon: Record<string, IconType> = {\n  pdf: AiOutlineFilePdf,\n  xlsx: AiOutlineFileExcel,\n  xlx: AiOutlineFileExcel,\n}\n\nexport type FileProps = {\n  name: string\n  display?: string\n  className?: string\n}\n\nexport const File = ({ name, className, display }: FileProps): JSX.Element => {\n  const { allFile } = useStaticQuery<FileQuery>(graphql`\n    query File {\n      allFile(filter: { sourceInstanceName: { eq: \"data\" } }) {\n        nodes {\n          id\n          extension\n          name\n          base\n          publicURL\n          relativePath\n        }\n      }\n    }\n  `)\n\n  const file = useMemo(() => {\n    return allFile.nodes.find(\n      (node) =>\n        node.relativePath === name || node.name === name || node.base === name,\n    )\n  }, [allFile.nodes, name])\n\n  const Icon = useMemo(() => {\n    if (!file) return AiOutlineFile\n    return fileIcon[file.extension] ?? AiOutlineFile\n  }, [file])\n\n  if (!file) {\n    return <div>ファイルが見つかりません</div>\n  }\n\n  return (\n    <div>\n      <a\n        className={clsx(\n          'flex flex-row flex-nowrap gap-2 items-center py-2 px-4',\n          'hover:underline hover:underline-offset-2',\n          className,\n        )}\n        download\n        href={file.publicURL}\n      >\n        <Icon\n          className={clsx(\n            'flex-shrink-0',\n            file.extension === 'pdf'\n              ? 'text-rose-500 border-rose-500'\n              : file.extension === 'xlsx' || file.extension === 'xlx'\n              ? 'text-emerald-500 border-emerald-500'\n              : 'border-gray-600',\n          )}\n          size={24}\n        />\n\n        <span className=\"text-lg\">{display ?? file.base}</span>\n      </a>\n    </div>\n  )\n}\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\nimport { DataSectionBlockFileFragment } from '~graphql-types'\nimport { File } from '../Common/organisms/File'\n\nconst graphql = String.raw\n\nexport const DataSectionBlockFragment = graphql`\n  fragment DataSectionBlockFile on ConfigYamlFiles {\n    name\n    date\n    pdf {\n      relativePath\n    }\n    excel {\n      relativePath\n    }\n  }\n`\n\ntype DataSectionBlockProps = JSX.IntrinsicElements['div'] & {\n  file: DataSectionBlockFileFragment\n}\n\nexport const DataSectionBlock = forwardRef<\n  HTMLDivElement,\n  DataSectionBlockProps\n>(({ className, file, ...props }, ref) => {\n  if (!file.name || !file.excel?.relativePath || !file.pdf?.relativePath) {\n    return null\n  }\n  return (\n    <div\n      className={clsx('flex flex-col gap-3', className)}\n      {...props}\n      ref={ref}\n    >\n      <p>{file.date}</p>\n\n      <p className=\"text-lg\">{file.name}</p>\n\n      <ul className=\"flex flex-col gap-3 p-4 bg-opacity-20 bg-cyan-200\">\n        <li>\n          <File display=\"データソースと公開URL\" name={file.pdf.relativePath} />\n        </li>\n\n        <li>\n          <File display=\"データ一覧\" name={file.excel.relativePath} />\n        </li>\n      </ul>\n    </div>\n  )\n})\n","import { useLocation } from '@reach/router'\nimport { useMemo } from 'react'\nexport const useIsSameSite = (url: string): boolean => {\n  const location = useLocation()\n  const isSameSite = useMemo(() => {\n    if (url.startsWith('/') || url.startsWith('#') || url.startsWith('.'))\n      return true\n    try {\n      const toUrl = new URL(url)\n      const locationUrl = new URL(location.href)\n      return toUrl.origin === locationUrl.origin\n    } catch {\n      return false\n    }\n  }, [location.href, url])\n\n  return isSameSite\n}\n","export const isNotNullable = <T>(value: T): value is NonNullable<T> => {\n  return value !== null && typeof value !== 'undefined'\n}\n","import sync, { cancelSync } from 'framesync';\nimport { useEffect } from 'react';\nimport { useConstant } from './use-constant.mjs';\nvar getCurrentTime = typeof performance !== \"undefined\" ? function () {\n  return performance.now();\n} : function () {\n  return Date.now();\n};\n\nfunction useAnimationFrame(callback) {\n  var initialTimestamp = useConstant(getCurrentTime);\n  useEffect(function () {\n    var provideTimeSinceStart = function provideTimeSinceStart(_a) {\n      var timestamp = _a.timestamp;\n      callback(timestamp - initialTimestamp);\n    };\n\n    sync.update(provideTimeSinceStart, true);\n    return function () {\n      return cancelSync.update(provideTimeSinceStart);\n    };\n  }, [callback]);\n}\n\nexport { useAnimationFrame };","import { __read } from 'tslib';\nimport { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\n\nfunction useMotionValue(initial) {\n  var value = useConstant(function () {\n    return motionValue(initial);\n  });\n  /**\n   * If this motion value is being used in static mode, like on\n   * the Framer canvas, force components to rerender when the motion\n   * value is updated.\n   */\n\n  var isStatic = useContext(MotionConfigContext).isStatic;\n\n  if (isStatic) {\n    var _a = __read(useState(initial), 2),\n        setLatest_1 = _a[1];\n\n    useEffect(function () {\n      return value.onChange(setLatest_1);\n    }, []);\n  }\n\n  return value;\n}\n\nexport { useMotionValue };","import { useAnimationFrame } from '../utils/use-animation-frame.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\n\nfunction useTime() {\n  var time = useMotionValue(0);\n  useAnimationFrame(function (t) {\n    return time.set(t);\n  });\n  return time;\n}\n\nexport { useTime };","import { __assign } from 'tslib';\nimport { interpolate } from 'popmotion';\n\nvar isCustomValueType = function isCustomValueType(v) {\n  return typeof v === \"object\" && v.mix;\n};\n\nvar getMixer = function getMixer(v) {\n  return isCustomValueType(v) ? v.mix : undefined;\n};\n\nfunction transform() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var useImmediate = !Array.isArray(args[0]);\n  var argOffset = useImmediate ? 0 : -1;\n  var inputValue = args[0 + argOffset];\n  var inputRange = args[1 + argOffset];\n  var outputRange = args[2 + argOffset];\n  var options = args[3 + argOffset];\n  var interpolator = interpolate(inputRange, outputRange, __assign({\n    mixer: getMixer(outputRange[0])\n  }, options));\n  return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };","import { useMotionValue } from './use-motion-value.mjs';\nimport { useMultiOnChange } from './use-on-change.mjs';\nimport sync from 'framesync';\n\nfunction useCombineMotionValues(values, combineValues) {\n  /**\n   * Initialise the returned motion value. This remains the same between renders.\n   */\n  var value = useMotionValue(combineValues());\n  /**\n   * Create a function that will update the template motion value with the latest values.\n   * This is pre-bound so whenever a motion value updates it can schedule its\n   * execution in Framesync. If it's already been scheduled it won't be fired twice\n   * in a single frame.\n   */\n\n  var updateValue = function updateValue() {\n    return value.set(combineValues());\n  };\n  /**\n   * Synchronously update the motion value with the latest values during the render.\n   * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n   */\n\n\n  updateValue();\n  /**\n   * Subscribe to all motion values found within the template. Whenever any of them change,\n   * schedule an update.\n   */\n\n  useMultiOnChange(values, function () {\n    return sync.update(updateValue, false, true);\n  });\n  return value;\n}\n\nexport { useCombineMotionValues };","import { useEffect } from 'react';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\n\nfunction useOnChange(value, callback) {\n  useEffect(function () {\n    if (isMotionValue(value)) return value.onChange(callback);\n  }, [callback]);\n}\n\nfunction useMultiOnChange(values, handler) {\n  useEffect(function () {\n    var subscriptions = values.map(function (value) {\n      return value.onChange(handler);\n    });\n    return function () {\n      return subscriptions.forEach(function (unsubscribe) {\n        return unsubscribe();\n      });\n    };\n  });\n}\n\nexport { useMultiOnChange, useOnChange };","import { __read } from 'tslib';\nimport { transform } from '../utils/transform.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n  var transformer = typeof inputRangeOrTransformer === \"function\" ? inputRangeOrTransformer : transform(inputRangeOrTransformer, outputRange, options);\n  return Array.isArray(input) ? useListTransform(input, transformer) : useListTransform([input], function (_a) {\n    var _b = __read(_a, 1),\n        latest = _b[0];\n\n    return transformer(latest);\n  });\n}\n\nfunction useListTransform(values, transformer) {\n  var latest = useConstant(function () {\n    return [];\n  });\n  return useCombineMotionValues(values, function () {\n    latest.length = 0;\n    var numValues = values.length;\n\n    for (var i = 0; i < numValues; i++) {\n      latest[i] = values[i].get();\n    }\n\n    return transformer(latest);\n  });\n}\n\nexport { useTransform };","import { m, MotionValue, useMotionValue, useTransform } from 'framer-motion'\nimport { RefObject, useEffect, useRef } from 'react'\nimport { useRelativePosition } from '~/hooks/useRelativePosition'\n\ntype HexagonProps = {\n  size: string\n  parentRef: RefObject<Element>\n  state: MotionValue<number>\n}\n\nexport const Hexagon = ({\n  size,\n  parentRef,\n  state,\n}: HexagonProps): JSX.Element => {\n  const ref = useRef(null)\n  const relative = useRelativePosition(parentRef, ref)\n\n  const delay = useMotionValue(0)\n\n  useEffect(() => {\n    if (relative?.ratio) {\n      delay.set(relative.ratio)\n    }\n  }, [delay, relative?.ratio])\n\n  const num = useTransform<number, number>(\n    [state, delay],\n    ([prevState, prevDelay]) => ((prevState ?? 0) + (prevDelay ?? 0)) % 1,\n  )\n\n  const color = useTransform(\n    num,\n    [0, 0.5, 1],\n    ['#93DAE3', '#42C2D3', '#93DAE3'],\n  )\n\n  return (\n    <svg\n      className=\"drop-shadow-hexagon\"\n      height={size}\n      ref={ref}\n      viewBox=\"-150 -150 300 300\"\n      width={size}\n    >\n      <m.path\n        d=\"M130 75 L0 150 L-130 75 L-130 -75 L-0 -150 L130 -75 z\"\n        fill={color}\n      />\n    </svg>\n  )\n}\n","import { RefObject, useMemo } from 'react'\nimport { usePosition } from './usePosition'\n\nexport type RelativePosition = {\n  ratio: number\n}\n\nexport const useRelativePosition = <T extends Element, V extends Element>(\n  parentRef: RefObject<T>,\n  ref: RefObject<V>,\n): RelativePosition | null => {\n  const parentPosition = usePosition(parentRef)\n  const position = usePosition(ref)\n\n  const relativePosition = useMemo<RelativePosition | null>(() => {\n    if (!parentPosition || !position) {\n      return null\n    }\n\n    // (x1, y1)is corner of parent, (x2, y2) is center of child\n    const x1 = parentPosition.width\n    const y1 = parentPosition.height\n    const x2 = position.left - parentPosition.left + position.width / 2\n    const y2 = -(position.top - parentPosition.top) + position.height / 2\n\n    const r1_2 = x1 ** 2 + y1 ** 2\n\n    const ratio = (x1 * x2 + y1 * y2) / r1_2\n\n    return {\n      ratio,\n    }\n  }, [parentPosition, position])\n\n  return relativePosition\n}\n","import clsx from 'clsx'\nimport { useTime, useTransform } from 'framer-motion'\nimport { useRef } from 'react'\nimport { Hexagon } from '../atoms/Hexagon'\n\ntype HexagonMapProps = {\n  className?: string\n  duration?: number\n}\n\nexport const HexagonMap = ({\n  className,\n  duration = 1000,\n}: HexagonMapProps): JSX.Element => {\n  const ref = useRef(null)\n  const time = useTime()\n  const state = useTransform(time, (prev) => (prev % duration) / duration)\n\n  return (\n    <div\n      className={clsx('inline-flex flex-col gap-3 animate-pulse', className)}\n      ref={ref}\n    >\n      <div className=\"flex flex-row gap-6\">\n        {/* {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15].map((i) => (\n          <Hexagon state={state} delay={i * DELAY} key={i} parentRef={ref} size=\"15\" />\n        ))} */}\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n      </div>\n\n      <div className=\"flex flex-row gap-6\">\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n      </div>\n\n      <div className=\"flex flex-row gap-6\">\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n\n        <Hexagon parentRef={ref} size=\"15\" state={state} />\n      </div>\n    </div>\n  )\n}\n","import clsx from 'clsx'\nimport { FormEventHandler, forwardRef, useCallback } from 'react'\nimport { useToasts } from 'react-toast-notifications'\n\nexport const ContactForm = forwardRef<\n  HTMLFormElement,\n  JSX.IntrinsicElements['form']\n>(({ className, children, ...props }, ref) => {\n  const { addToast } = useToasts()\n\n  const onSubmit = useCallback<FormEventHandler<HTMLFormElement>>(\n    (e) => {\n      setTimeout(() => {\n        if (e.target instanceof HTMLFormElement) {\n          e.target.reset()\n        }\n        addToast('お問い合わせありがとうございます。', { autoDismiss: true })\n      })\n    },\n    [addToast],\n  )\n\n  return (\n    <form\n      className={clsx('', className)}\n      method=\"POST\"\n      onSubmit={onSubmit}\n      ref={ref}\n      target=\"contact-form-iframe\"\n      {...props}\n    >\n      {children}\n\n      <iframe className=\"hidden\" name=\"contact-form-iframe\" />\n    </form>\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const ContactFormField = forwardRef<\n  HTMLFieldSetElement,\n  JSX.IntrinsicElements['fieldset']\n>(({ className, ...props }, ref) => {\n  return (\n    <fieldset\n      className={clsx('flex flex-col gap-1', 'sm:flex-row sm:gap-4', className)}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const ContactFormFieldInput = forwardRef<\n  HTMLInputElement,\n  JSX.IntrinsicElements['input']\n>(({ className, ...props }, ref) => {\n  return (\n    <input\n      className={clsx(\n        'block flex-1 text-lg placeholder:text-gray-400 bg-gray-200 rounded-t-xl border-0 border-b-2 border-transparent',\n        'focus:ring-0 focus:outline-none focus:border-cyan-500',\n        'focus:shadow-lg focus:shadow-cyan-50',\n        className,\n      )}\n      ref={ref}\n      type=\"text\"\n      {...props}\n    />\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const ContactFormFieldLabel = forwardRef<\n  HTMLParagraphElement,\n  JSX.IntrinsicElements['p']\n>(({ className, children, ...props }, ref) => {\n  return (\n    <p\n      className={clsx(\n        'flex flex-row justify-start items-center text-lg text-right min-w-[8rem]',\n        'sm:justify-end sm:text-base',\n        'lg:min-w-[4rem]',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    >\n      <legend>{children}</legend>\n    </p>\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const ContactFormFieldTextarea = forwardRef<\n  HTMLTextAreaElement,\n  JSX.IntrinsicElements['textarea']\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={clsx(\n        'block flex-1 text-lg placeholder:text-gray-400 bg-gray-200 rounded-t-xl border-0',\n        'focus:border-b-2 focus:ring-0 focus:outline-none focus:border-cyan-500',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import { ContactFormField as RootContactFormField } from './ContactFormField'\nimport { ContactFormFieldInput } from './ContactFormFieldInput'\nimport { ContactFormFieldLabel } from './ContactFormFieldLabel'\nimport { ContactFormFieldTextarea } from './ContactFormFieldTextarea'\n\ntype ContactFormField = typeof RootContactFormField & {\n  Label: typeof ContactFormFieldLabel\n  Input: typeof ContactFormFieldInput\n  Textarea: typeof ContactFormFieldTextarea\n}\n\nconst ContactFormField = RootContactFormField as ContactFormField\nContactFormField.Label = ContactFormFieldLabel\nContactFormField.Input = ContactFormFieldInput\nContactFormField.Textarea = ContactFormFieldTextarea\n\nexport default ContactFormField\n","import { ContactForm as RootContactForm } from './ContactForm'\nimport ContactFormField from './ContactFormField'\n\ntype ContactForm = typeof RootContactForm & {\n  Field: typeof ContactFormField\n}\n\nconst ContactForm = RootContactForm as ContactForm\nContactForm.Field = ContactFormField\n\nexport default ContactForm\n","import clsx from 'clsx'\nimport { Button } from '../Common/atoms/Button'\n\nexport const ContactFormButton = ({\n  className,\n  ...props\n}: Omit<JSX.IntrinsicElements['button'], 'ref'>): JSX.Element => {\n  return <Button className={clsx('', className)} type=\"submit\" {...props} />\n}\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const Hero = forwardRef<HTMLDivElement, JSX.IntrinsicElements['div']>(\n  ({ className, ...props }, ref) => {\n    return <div className={clsx('relative', className)} ref={ref} {...props} />\n  },\n)\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const HeroText = forwardRef<\n  HTMLParagraphElement,\n  JSX.IntrinsicElements['p']\n>(({ className, ...props }, ref) => {\n  return (\n    <p\n      className={clsx(\n        'absolute bottom-24 left-12 font-light tracking-widest',\n        'md:bottom-36 md:left-20 md:text-4xl',\n        'lg:left-36',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import { Hero as HeroRoot } from './Hero'\nimport { HeroImage } from './HeroImage'\nimport { HeroText } from './HeroText'\n\ntype Hero = typeof HeroRoot & {\n  Image: typeof HeroImage\n  Text: typeof HeroText\n}\n\nconst Hero = HeroRoot as Hero\nHero.Image = HeroImage\nHero.Text = HeroText\n\nexport default Hero\n","import clsx from 'clsx'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\nimport { ComponentProps } from 'react'\n\ntype HeroImageProps = Omit<ComponentProps<typeof GatsbyImage>, 'image'> & {\n  mobileImage: IGatsbyImageData\n  desktopImage: IGatsbyImageData\n}\n\nexport const HeroImage = ({\n  className,\n  mobileImage,\n  desktopImage,\n  ...props\n}: HeroImageProps): JSX.Element => {\n  return (\n    <div className=\"overflow-hidden relative\">\n      <GatsbyImage\n        className={clsx(\n          'hidden md:block object-cover w-full h-[32rem]',\n          className,\n        )}\n        image={desktopImage}\n        imgClassName=\"object-right-top\"\n        {...props}\n      />\n\n      <GatsbyImage\n        className={clsx(\n          'block md:hidden object-cover w-full h-[32rem]',\n          className,\n        )}\n        image={mobileImage}\n        imgClassName=\"object-right-top\"\n        {...props}\n      />\n    </div>\n  )\n}\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const Introduction = forwardRef<\n  HTMLDivElement,\n  JSX.IntrinsicElements['article']\n>(({ className, ...props }, ref) => {\n  return (\n    <article\n      className={clsx(\n        'flex flex-col md:flex-row gap-16 items-center',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const IntroductionDescription = forwardRef<\n  HTMLDivElement,\n  JSX.IntrinsicElements['div']\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      className={clsx('flex flex-col flex-1 gap-5', className)}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const IntroductionName = forwardRef<\n  HTMLDivElement,\n  JSX.IntrinsicElements['div']\n>(({ className, ...props }, ref) => {\n  return <div className={clsx('', className)} ref={ref} {...props} />\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const IntroductionNameEnglish = forwardRef<\n  HTMLParagraphElement,\n  JSX.IntrinsicElements['p']\n>(({ className, ...props }, ref) => {\n  return (\n    <p\n      className={clsx(' text-sm font-light ', className)}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const IntroductionNameJapanese = forwardRef<\n  HTMLParagraphElement,\n  JSX.IntrinsicElements['p']\n>(({ className, ...props }, ref) => {\n  return <p className={clsx(' text-2xl ', className)} ref={ref} {...props} />\n})\n","import { IntroductionName as IntroductionNameRoot } from './IntroductionName'\nimport { IntroductionNameEnglish } from './IntroductionNameEnglish'\nimport { IntroductionNameJapanese } from './IntroductionNameJapanese'\n\ntype IntroductionName = typeof IntroductionNameRoot & {\n  Japanese: typeof IntroductionNameJapanese\n  English: typeof IntroductionNameEnglish\n}\n\nconst IntroductionName = IntroductionNameRoot as IntroductionName\nIntroductionName.Japanese = IntroductionNameJapanese\nIntroductionName.English = IntroductionNameEnglish\n\nexport default IntroductionName\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const IntroductionProfile = forwardRef<\n  HTMLParagraphElement,\n  JSX.IntrinsicElements['p']\n>(({ className, ...props }, ref) => {\n  return (\n    <p\n      className={clsx(\n        'text-lg tracking-wider leading-loose text-justify',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const MainSubject = forwardRef<\n  HTMLDivElement,\n  JSX.IntrinsicElements['div']\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      className={clsx('flex flex-row gap-3', className)}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const Square = forwardRef<HTMLDivElement, JSX.IntrinsicElements['i']>(\n  ({ className, ...props }, ref) => {\n    return (\n      <i className={clsx('not-italic', className)} {...props} ref={ref}>\n        ■\n      </i>\n    )\n  },\n)\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\nimport { Square } from '~/components/Common/atoms/Square'\n\nexport const MainSubjectLabel = forwardRef<\n  HTMLParagraphElement,\n  JSX.IntrinsicElements['p']\n>(({ className, children, ...props }, ref) => {\n  return (\n    <p className={clsx(' text-lg ', className)} ref={ref} {...props}>\n      <Square className=\"text-cyan-400\" />\n\n      {children}\n    </p>\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const MainSubjectName = forwardRef<\n  HTMLParagraphElement,\n  JSX.IntrinsicElements['p']\n>(({ className, ...props }, ref) => {\n  return <p className={clsx(' text-lg ', className)} ref={ref} {...props} />\n})\n","import { MainSubject as MainSubjectRoot } from './MainSubject'\nimport { MainSubjectLabel } from './MainSubjectLabel'\nimport { MainSubjectName } from './MainSubjectName'\n\ntype MainSubject = typeof MainSubjectRoot & {\n  Label: typeof MainSubjectLabel\n  Name: typeof MainSubjectName\n}\n\nconst MainSubject = MainSubjectRoot as MainSubject\nMainSubject.Label = MainSubjectLabel\nMainSubject.Name = MainSubjectName\n\nexport default MainSubject\n","import { Introduction as IntroductionRoot } from './Introduction'\nimport { IntroductionDescription } from './IntroductionDescription'\nimport { IntroductionImage } from './IntroductionImage'\nimport IntroductionName from './IntroductionName'\nimport { IntroductionProfile } from './IntroductionProfile'\nimport MainSubject from './MainSubject'\n\ntype Introduction = typeof IntroductionRoot & {\n  Name: typeof IntroductionName\n  MainSubject: typeof MainSubject\n  Description: typeof IntroductionDescription\n  Profile: typeof IntroductionProfile\n  Image: typeof IntroductionImage\n}\n\nconst Introduction = IntroductionRoot as Introduction\nIntroduction.Name = IntroductionName\nIntroduction.MainSubject = MainSubject\nIntroduction.Description = IntroductionDescription\nIntroduction.Profile = IntroductionProfile\nIntroduction.Image = IntroductionImage\n\nexport default Introduction\n","import clsx from 'clsx'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { ComponentProps } from 'react'\n\nexport const IntroductionImage = ({\n  className,\n  ...props\n}: ComponentProps<typeof GatsbyImage>): JSX.Element => {\n  return (\n    <GatsbyImage\n      className={clsx('flex-shrink-0 w-64 h-64 rounded-md', className)}\n      {...props}\n    />\n  )\n}\n","import { NewsList as NewsListRoot } from './NewsList'\n\ntype NewsList = typeof NewsListRoot\n\nconst NewsList = NewsListRoot\n\nexport default NewsList\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const NewsList = forwardRef<\n  HTMLOListElement,\n  JSX.IntrinsicElements['ol']\n>(({ className, ...props }, ref) => {\n  return (\n    <ol\n      className={clsx('flex flex-col gap-4', className)}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const ResearchList = forwardRef<\n  HTMLUListElement,\n  JSX.IntrinsicElements['ul']\n>(({ className, ...props }, ref) => (\n  <ul\n    className={clsx('flex flex-col gap-12', className)}\n    {...props}\n    ref={ref}\n  />\n))\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const ResearchListItem = forwardRef<\n  HTMLLIElement,\n  JSX.IntrinsicElements['li']\n>(({ className, ...props }, ref) => (\n  <li\n    className={clsx(\n      'flex flex-col gap-3',\n      'lg:flex-row lg:gap-11 lg:mx-auto',\n      className,\n    )}\n    {...props}\n    ref={ref}\n  />\n))\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\n\nexport const ResearchListItemBody = forwardRef<\n  HTMLParagraphElement,\n  JSX.IntrinsicElements['p']\n>(({ className, ...props }, ref) => (\n  <p\n    className={clsx(\n      'lg:max-w-3xl tracking-wider leading-loose text-justify',\n      className,\n    )}\n    {...props}\n    ref={ref}\n  />\n))\n","import clsx from 'clsx'\nimport { forwardRef } from 'react'\nimport { Square } from '~/components/Common/atoms/Square'\n\nexport const ResearchListItemTitle = forwardRef<\n  HTMLParagraphElement,\n  JSX.IntrinsicElements['p']\n>(({ className, children, ...props }, ref) => (\n  <p\n    className={clsx('flex flex-row items-start', 'lg:mt-6', className)}\n    {...props}\n    ref={ref}\n  >\n    <Square className=\"mr-1 text-cyan-400\" />\n\n    <span className=\"inline-block lg:w-24\">{children}</span>\n  </p>\n))\n","import { ResearchListItem as RootResearchListItem } from './ResearchListItem'\nimport { ResearchListItemBody } from './ResearchListItemBody'\nimport { ResearchListItemTitle } from './ResearchListItemTitle'\n\ntype ResearchListItem = typeof RootResearchListItem & {\n  Title: typeof ResearchListItemTitle\n  Body: typeof ResearchListItemBody\n}\n\nconst ResearchListItem = RootResearchListItem as ResearchListItem\nResearchListItem.Title = ResearchListItemTitle\nResearchListItem.Body = ResearchListItemBody\n\nexport default ResearchListItem\n","import { ResearchList as RootResearchList } from './ResearchList'\nimport ResearchListItem from './ResearchListItem'\n\ntype ResearchList = typeof RootResearchList & {\n  Item: typeof ResearchListItem\n}\n\nconst ResearchList = RootResearchList as ResearchList\nResearchList.Item = ResearchListItem\n\nexport default ResearchList\n","import { graphql, PageProps } from 'gatsby'\nimport { getImage, StaticImage } from 'gatsby-plugin-image'\nimport { useMemo } from 'react'\nimport { Link } from '~/components/Common/atoms/Link'\nimport { HexagonMap } from '~/components/Common/molecules/HexagonMap'\nimport { NewsListItem } from '~/components/Common/organisms/NewsListItem'\nimport { Layout } from '~/components/Common/templates/Layout'\nimport { Seo } from '~/components/Common/templates/seo'\nimport ContactForm from '~/components/ContactForm'\nimport { ContactFormButton } from '~/components/ContactForm/ContactFormButton'\nimport { DataSectionBlock } from '~/components/DataSection/DataSectionBlock'\nimport Hero from '~/components/Hero'\nimport Introduction from '~/components/Introduction'\nimport NewsList from '~/components/NewsList'\nimport ResearchList from '~/components/ResearchList'\nimport Section from '~/components/Section'\nimport { isNotNullable } from '~/lib/is-not-nullable'\nimport { IndexPageQuery } from '~graphql-types'\n\nexport const query = graphql`\n  query IndexPage {\n    allFile(\n      limit: 3\n      filter: {\n        sourceInstanceName: { eq: \"news\" }\n        name: { ne: \"sample\" }\n        extension: { eq: \"md\" }\n        childMarkdownRemark: { frontmatter: { noIndex: { ne: true } } }\n      }\n      sort: { fields: childrenMarkdownRemark___frontmatter___date, order: DESC }\n    ) {\n      nodes {\n        id\n        ...NewsListItem\n      }\n    }\n    heroMobile: file(\n      sourceInstanceName: { eq: \"images\" }\n      name: { eq: \"hero-mobile\" }\n    ) {\n      childImageSharp {\n        gatsbyImageData(layout: FULL_WIDTH, quality: 80)\n      }\n    }\n    heroDesktop: file(\n      sourceInstanceName: { eq: \"images\" }\n      name: { eq: \"hero-desktop\" }\n    ) {\n      childImageSharp {\n        gatsbyImageData(layout: FULL_WIDTH, quality: 80)\n      }\n    }\n    topImage: file(\n      sourceInstanceName: { eq: \"images\" }\n      name: { eq: \"top_image\" }\n    ) {\n      childImageSharp {\n        gatsbyImageData\n      }\n    }\n    latestFiles: configYaml {\n      year\n      files {\n        name\n        date\n        pdf {\n          relativePath\n        }\n        excel {\n          relativePath\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        contact {\n          googleFormId\n          fields {\n            name\n            belongs\n            contactAddress\n            body\n          }\n        }\n      }\n    }\n  }\n`\n\nconst IndexPage = ({ data }: PageProps<IndexPageQuery>): JSX.Element => {\n  const heroMobile = useMemo(\n    () =>\n      data.heroMobile?.childImageSharp?.gatsbyImageData &&\n      getImage(data.heroMobile.childImageSharp.gatsbyImageData),\n    [data.heroMobile?.childImageSharp?.gatsbyImageData],\n  )\n\n  const heroDesktop = useMemo(\n    () =>\n      data.heroDesktop?.childImageSharp?.gatsbyImageData &&\n      getImage(data.heroDesktop.childImageSharp.gatsbyImageData),\n    [data.heroDesktop?.childImageSharp?.gatsbyImageData],\n  )\n\n  const topImage = useMemo(\n    () =>\n      data.topImage?.childImageSharp?.gatsbyImageData &&\n      getImage(data.topImage.childImageSharp.gatsbyImageData),\n    [data.topImage?.childImageSharp?.gatsbyImageData],\n  )\n\n  return (\n    <Layout>\n      <Seo />\n\n      <Hero className=\"mb-8\">\n        {heroMobile && (\n          <Hero.Image\n            alt=\"\"\n            desktopImage={heroDesktop}\n            mobileImage={heroMobile}\n          />\n        )}\n\n        <Hero.Text>\n          <span className=\"text-xl sm:text-2xl md:text-4xl leading-normal\">\n            Health Data Science Frontier.\n          </span>\n\n          <br />\n\n          <span className=\"text-3xl sm:text-4xl md:text-5xl leading-normal\">\n            データで医療を変えていく\n          </span>\n        </Hero.Text>\n\n        <HexagonMap className=\"absolute -bottom-8 left-8\" />\n      </Hero>\n\n      <Section id=\"ご挨拶\">\n        <Section.Title>ご挨拶</Section.Title>\n\n        <Section.Body>\n          <ResearchList>\n            <ResearchList.Item>\n              <ResearchList.Item.Title>研究について</ResearchList.Item.Title>\n\n              <ResearchList.Item.Body>\n                私は情報系がバックグラウンドで、大学院から医歯学総合研究科に進み、\n                疫学や統計に関する勉強をしていました。以来、医療・福祉政策やヘルスサービスリサーチを研究テーマとしています。\n                研究は、量的な分析に加えて、諸外国の医療制度に関する研究や、\n                医療政策に関する質的研究も行っています。\n                ここ数年は、統計学に加えて機械学習など新たな手法へのチャレンジをしています。\n                その他の活動として、データの利活用に資するオープンサイエンスの推進、統計学の研究会などを行っています。\n              </ResearchList.Item.Body>\n            </ResearchList.Item>\n\n            <ResearchList.Item>\n              <ResearchList.Item.Title>学生の方へ</ResearchList.Item.Title>\n\n              <ResearchList.Item.Body>\n                HDSに入学される方は、既に何らかの分野のプロフェッショナルですので、\n                私はその方の修士課程やその先の目標に応じて、\n                異なった視点から研究を組み立てていくプロセスをアシストしていきたいと思っています。\n                HDSを卒業された後には、その領域のリーダーとして活躍する人になってほしいと思っていますし、\n                入学された方にはそのポテンシャルがあると実感しています。\n                ヘルスサービスリサーチの対象となる研究分野は限定されていないので、\n                多様な領域の方と議論できるといいなと思っています。\n              </ResearchList.Item.Body>\n            </ResearchList.Item>\n          </ResearchList>\n        </Section.Body>\n      </Section>\n\n      <Section className=\"z-0\" id=\"研究者案内\">\n        <HexagonMap className=\"absolute top-24 right-12 -z-10\" />\n\n        <Section.Title>研究者案内</Section.Title>\n\n        <Section.Body>\n          <Introduction>\n            <Introduction.Description>\n              <Introduction.Name>\n                <Introduction.Name.Japanese>\n                  清水 沙友里\n                </Introduction.Name.Japanese>\n\n                <Introduction.Name.English>\n                  Shimizu Sayuri\n                </Introduction.Name.English>\n              </Introduction.Name>\n\n              <Introduction.MainSubject>\n                <Introduction.MainSubject.Label>\n                  主要担当科目\n                </Introduction.MainSubject.Label>\n\n                <Introduction.MainSubject.Name>\n                  ビッグデータ解析\n                </Introduction.MainSubject.Name>\n              </Introduction.MainSubject>\n\n              <Introduction.Profile>\n                医療は、サイエンスが背景にありつつも、\n                現実世界では必ずしもゼロイチでわけられない曖昧な領域を含んでおり、\n                その国特有のものの考え方が反映されている非常に面白い分野だと感じています。\n                医療業界も、近い未来には他の分野の企業や人が参入する新たな時代が来るのではないでしょうか。\n                医療のあり方を記述し、世の中を俯瞰して見るような研究も好きですが、\n                そういった時代の変化を捉える分析も行っていきたいと考えています。\n              </Introduction.Profile>\n\n              <Link className=\"ml-auto\" to=\"https://researchmap.jp/ssyr\">\n                リサーチマップはこちら\n              </Link>\n            </Introduction.Description>\n\n            {topImage && (\n              <Introduction.Image alt=\"清水 沙友里\" image={topImage} />\n            )}\n          </Introduction>\n        </Section.Body>\n      </Section>\n\n      <Section className=\"z-0\" id=\"お知らせ\">\n        <HexagonMap className=\"absolute bottom-0 left-4 -z-10\" />\n\n        <Section.Title>お知らせ</Section.Title>\n\n        <Section.Body>\n          {data.allFile.nodes.length > 0 ? (\n            <NewsList className=\"mb-8\">\n              {data.allFile.nodes.map((news) => (\n                <NewsListItem key={news.id} {...news} />\n              ))}\n            </NewsList>\n          ) : (\n            <p>お知らせはまだありません</p>\n          )}\n\n          <Link className=\"block ml-auto max-w-max\" to=\"/news\">\n            お知らせ一覧\n          </Link>\n        </Section.Body>\n      </Section>\n\n      <Section id=\"資料\">\n        <Section.Title>{`${data.latestFiles?.year}年度の資料`}</Section.Title>\n\n        <Section.Body>\n          <div className=\"flex-1\">\n            <div className=\"flex flex-col gap-8 mb-4 max-w-lg\">\n              {data.latestFiles?.files?.filter(isNotNullable).map((file) => (\n                <DataSectionBlock file={file} key={file.name} />\n              ))}\n            </div>\n          </div>\n\n          <div className=\"mx-auto max-w-max\">\n            <Link className=\"block\" to=\"/data\">\n              過去の資料はこちら\n            </Link>\n          </div>\n        </Section.Body>\n      </Section>\n\n      <Section className=\"z-0\" id=\"お問い合わせ\">\n        <HexagonMap className=\"absolute right-7 bottom-24 -z-10\" />\n\n        <Section.Title>お問い合わせ</Section.Title>\n\n        <Section.Body>\n          <ContactForm\n            action={`https://docs.google.com/forms/u/0/d/e/${data.site?.siteMetadata?.contact?.googleFormId}/formResponse`}\n          >\n            <div className=\"flex flex-col lg:flex-row gap-3 lg:gap-8 mb-8\">\n              <div className=\"flex flex-col flex-1 gap-3\">\n                <ContactForm.Field>\n                  <ContactForm.Field.Label>名前</ContactForm.Field.Label>\n\n                  <ContactForm.Field.Input\n                    name={data.site?.siteMetadata?.contact?.fields?.name}\n                    placeholder=\"山田 太郎\"\n                    required\n                  />\n                </ContactForm.Field>\n\n                <ContactForm.Field>\n                  <ContactForm.Field.Label>所属</ContactForm.Field.Label>\n\n                  <ContactForm.Field.Input\n                    name={data.site?.siteMetadata?.contact?.fields?.belongs}\n                    placeholder=\"横浜市立大学 ヘルスデータサイエンス学科\"\n                  />\n                </ContactForm.Field>\n\n                <ContactForm.Field>\n                  <ContactForm.Field.Label>連絡先</ContactForm.Field.Label>\n\n                  <ContactForm.Field.Input\n                    name={\n                      data.site?.siteMetadata?.contact?.fields?.contactAddress\n                    }\n                    placeholder=\"email@example.com 又は 090-1234-5678\"\n                  />\n                </ContactForm.Field>\n              </div>\n\n              <div className=\"flex-1\">\n                <ContactForm.Field className=\"h-full\">\n                  <ContactForm.Field.Label className=\"lg:sr-only\">\n                    お問い合わせ内容\n                  </ContactForm.Field.Label>\n\n                  <ContactForm.Field.Textarea\n                    name={data.site?.siteMetadata?.contact?.fields?.body}\n                    placeholder=\"詳しい内容をお書きください\"\n                    required\n                    rows={4}\n                  />\n                </ContactForm.Field>\n              </div>\n            </div>\n\n            <ContactFormButton className=\"block mx-auto\">\n              送信する\n            </ContactFormButton>\n          </ContactForm>\n        </Section.Body>\n      </Section>\n\n      <Section>\n        <Section.Title>関連リンク</Section.Title>\n\n        <Section.Body>\n          <div className=\"flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-4\">\n            <a\n              className=\"block flex-1 md:h-full\"\n              href=\"https://www-user.yokohama-cu.ac.jp/~ycuds/hds/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <span className=\"sr-only\">\n                横浜市立大学 データサイエンス研究科 ヘルスデータサイエンス専攻\n              </span>\n\n              <StaticImage\n                alt=\"横浜市立大学 データサイエンス研究科 ヘルスデータサイエンス専攻\"\n                layout=\"fullWidth\"\n                src=\"../images/HDS.png\"\n              />\n            </a>\n\n            <a\n              className=\"block flex-1 md:h-full\"\n              href=\"https://www.yokohama-cu.ac.jp/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <span className=\"sr-only\">横浜市立大学</span>\n\n              <StaticImage\n                alt=\"横浜市立大学\"\n                layout=\"fullWidth\"\n                src=\"../images/YCU.png\"\n              />\n            </a>\n          </div>\n        </Section.Body>\n      </Section>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}"],"names":["Button","forwardRef","ref","className","isActive","props","clsx","LinkStyle","type","Link","to","useIsSameSite","href","rel","target","fileIcon","pdf","AiOutlineFilePdf","xlsx","AiOutlineFileExcel","xlx","File","name","display","allFile","useStaticQuery","file","useMemo","nodes","find","node","relativePath","base","Icon","extension","AiOutlineFile","download","publicURL","size","DataSectionBlock","graphql","String","raw","excel","date","url","location","useLocation","startsWith","toUrl","URL","locationUrl","origin","isNotNullable","value","getCurrentTime","performance","now","Date","useMotionValue","initial","useContext","MotionConfigContext","isStatic","setLatest_1","useState","useEffect","onChange","useTime","callback","initialTimestamp","time","t","set","provideTimeSinceStart","_a","timestamp","getMixer","v","mix","isCustomValueType","undefined","useCombineMotionValues","values","combineValues","updateValue","handler","subscriptions","map","forEach","unsubscribe","useMultiOnChange","useTransform","input","inputRangeOrTransformer","outputRange","options","transformer","args","_i","arguments","length","useImmediate","Array","isArray","argOffset","inputValue","inputRange","interpolator","interpolate","mixer","transform","useListTransform","latest","numValues","i","get","Hexagon","parentRef","state","useRef","relative","parentPosition","usePosition","position","x1","width","y1","height","ratio","left","top","useRelativePosition","delay","num","prevState","prevDelay","color","viewBox","m","d","fill","HexagonMap","duration","prev","ContactForm","children","addToast","useToasts","onSubmit","useCallback","e","setTimeout","HTMLFormElement","reset","autoDismiss","method","ContactFormField","ContactFormFieldInput","ContactFormFieldLabel","ContactFormFieldTextarea","RootContactFormField","Label","Input","Textarea","RootContactForm","Field","ContactFormButton","Hero","HeroText","HeroRoot","Image","mobileImage","desktopImage","G","image","imgClassName","Text","Introduction","IntroductionDescription","IntroductionName","IntroductionNameEnglish","IntroductionNameJapanese","IntroductionNameRoot","Japanese","English","IntroductionProfile","MainSubject","Square","MainSubjectLabel","MainSubjectName","MainSubjectRoot","Name","IntroductionRoot","Description","Profile","ResearchList","ResearchListItem","ResearchListItemBody","ResearchListItemTitle","RootResearchListItem","Title","Body","RootResearchList","Item","data","heroMobile","childImageSharp","gatsbyImageData","getImage","heroDesktop","topImage","Layout","alt","Section","id","news","NewsListItem","latestFiles","year","files","filter","action","site","siteMetadata","contact","googleFormId","fields","placeholder","required","belongs","contactAddress","body","rows","S","layout","src","_taggedTemplateLiteralLoose","strings","slice"],"sourceRoot":""}